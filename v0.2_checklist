Tasks to complete before KDT v0.2 release:

-------------- Mandatory -----------------
- semantic graphs
  - DiGraph.load(element=Obj)
  - implement vertex filter -> edge filter (as proposed by Adam)
    - have bfsTree/degree/etc. recognize DiGraph.vAttr as a Vec(Obj) of
      vertex attributes
  - clean up function names in ObjMethods.py and make mapping to 
	KDT operations clear
  - Vec.save()
  - DiGraph.neighbors [needed by Bing Social guys]
- fix
  - Vec.topK
- implement or wall off not-implemented pieces of
  - DiGraph.isBfsTree
  - Vec.find
  - {Vec,DiGraph}.__{get,set}item__ and subgraph()
  - Vec.floor, ceil, round
  - DiGraph.__{add,sub,mul,div,...}__
  - DiGraph.scale
- update User Guide
  - add element= option to copy(), etc
  - add contract, cluster, etc. from Adam/Drew's work
  - "ParVec"/"SpParVec" -> "Vec"/"SpVec"
  - document no HyGraph support for semantic graphs
  - update Errara
  - add link to SDM paper as UCSB tech report
- installation
  - install examples/ directory


-------------- Highly desirable ----------
- implement Matrix class
- raise error if operations are called with a semantic graph that
    don't support semantic graphs; ditto for vectors with filters
- raise error if operations are called that don't yet support Obj-based
    DiGraphs or Vec instances
- confirm that DiGraph.sum/max/min work with filters active
- update User Guide
  - update/change all v0.1/0.1W comment to v0.2

-------------- Nice to have --------------
- is current DiGraph convention that rows are out-edges the best?
- semantic graphs
  - ability to use other names for Obj* fields
- implement tests for 
  - Markov clustering
  - connComp
  - mixed Vec/SpVec ops
- use Prune more thoroughly to address nonnull/nonzero ambiguity
- Vec[bool] doesn't work properly on either LHS or RHS
- implement/test matrix[matrix] indexing
- implement isBorder() fn that detects that a vertex has a neighbor in 
    another cluster
- implement fn to find paths between a set of Vs
- get regression tests running multi-node
