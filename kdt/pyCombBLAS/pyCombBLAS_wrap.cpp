/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC)
#   if (__SUNPRO_CC <= 0x560)
#     define SWIGTEMPLATEDISAMBIGUATOR template
#   else
#     define SWIGTEMPLATEDISAMBIGUATOR 
#   endif
# else
#   define SWIGTEMPLATEDISAMBIGUATOR 
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif


/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "3"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_Format(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, int min, int max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register int l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), min, l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), max, l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } else {
      const char *name = SWIG_TypePrettyName(ty);
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", name);
#endif
    }
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */ 
#elif PY_VERSION_HEX >= 0x02000000
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) *ptr = SWIG_TypeCast(tc,vptr);
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own) *own = sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (!tc) return SWIG_ERROR;
      *ptr = SWIG_TypeCast(tc,vptr);
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_EWiseArg swig_types[0]
#define SWIGTYPE_p_EWiseArgDescriptor swig_types[1]
#define SWIGTYPE_p_MPI_Op swig_types[2]
#define SWIGTYPE_p_Obj1 swig_types[3]
#define SWIGTYPE_p_Obj2 swig_types[4]
#define SWIGTYPE_p_char swig_types[5]
#define SWIGTYPE_p_doubleint swig_types[6]
#define SWIGTYPE_p_f_double__double swig_types[7]
#define SWIGTYPE_p_op__BinaryFunction swig_types[8]
#define SWIGTYPE_p_op__BinaryFunctionObj swig_types[9]
#define SWIGTYPE_p_op__BinaryPredicateObj swig_types[10]
#define SWIGTYPE_p_op__Semiring swig_types[11]
#define SWIGTYPE_p_op__SemiringObj swig_types[12]
#define SWIGTYPE_p_op__UnaryFunction swig_types[13]
#define SWIGTYPE_p_op__UnaryFunctionObj swig_types[14]
#define SWIGTYPE_p_op__UnaryPredicateObj swig_types[15]
#define SWIGTYPE_p_pyDenseParVec swig_types[16]
#define SWIGTYPE_p_pyDenseParVecObj1 swig_types[17]
#define SWIGTYPE_p_pyDenseParVecObj2 swig_types[18]
#define SWIGTYPE_p_pySpParMat swig_types[19]
#define SWIGTYPE_p_pySpParMatBool swig_types[20]
#define SWIGTYPE_p_pySpParMatObj1 swig_types[21]
#define SWIGTYPE_p_pySpParMatObj2 swig_types[22]
#define SWIGTYPE_p_pySpParVec swig_types[23]
#define SWIGTYPE_p_pySpParVecObj1 swig_types[24]
#define SWIGTYPE_p_pySpParVecObj2 swig_types[25]
static swig_type_info *swig_types[27];
static swig_module_info swig_module = {swig_types, 26, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _pyCombBLAS.so
  ------------------------------------------------*/
#define SWIG_init    init_pyCombBLAS

#define SWIG_name    "_pyCombBLAS"

#define SWIGVERSION 0x010331 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) Py_XINCREF(_obj);
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#define SWIG_FILE_WITH_INIT

#define NO_SWIGPYRUN
#include "pyCombBLAS.h"


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


#include <limits.h>
#ifndef LLONG_MIN
# define LLONG_MIN	LONG_LONG_MIN
#endif
#ifndef LLONG_MAX
# define LLONG_MAX	LONG_LONG_MAX
#endif
#ifndef ULLONG_MAX
# define ULLONG_MAX	ULONG_LONG_MAX
#endif


SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
  if (PyString_Check(obj)) {
    char *cstr; Py_ssize_t len;
    PyString_AsStringAndSize(obj, &cstr, &len);
    if (cptr)  {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
	*cptr = PyString_AsString(obj);
      }
    }
    if (psize) *psize = len + 1;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  if (obj == Py_True) {
    if (val) *val = true;
    return SWIG_OK;
  } else if (obj == Py_False) {
    if (val) *val = false;
    return SWIG_OK;
  } else {
    long v = 0;
    int res = SWIG_AddCast(SWIG_AsVal_long (obj, val ? &v : 0));
    if (SWIG_IsOK(res) && val) *val = v ? true : false;
    return res;
  }
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_new_pySpParMat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pySpParMat")) SWIG_fail;
  {
    try {
      result = (pySpParMat *)new pySpParMat();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  int64_t arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg4 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg5 = (pyDenseParVec *) 0 ;
  pySpParMat *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pySpParMat",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pySpParMat" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pySpParMat" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pySpParMat" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_pySpParMat" "', argument " "4"" of type '" "pyDenseParVec *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVec * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_pySpParMat" "', argument " "5"" of type '" "pyDenseParVec *""'"); 
  }
  arg5 = reinterpret_cast< pyDenseParVec * >(argp5);
  {
    try {
      result = (pySpParMat *)new pySpParMat(arg1,arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMat__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = 0 ;
  pySpParMat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParMat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pySpParMat" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pySpParMat" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (pySpParMat *)new pySpParMat((pySpParMatBool const &)*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMat__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = 0 ;
  pySpParMat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParMat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pySpParMat" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pySpParMat" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      result = (pySpParMat *)new pySpParMat((pySpParMatObj1 const &)*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMat__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = 0 ;
  pySpParMat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParMat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pySpParMat" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pySpParMat" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      result = (pySpParMat *)new pySpParMat((pySpParMatObj2 const &)*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pySpParMat__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pySpParMat__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pySpParMat__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pySpParMat__SWIG_4(self, args);
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_pySpParMat__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_pySpParMat'.\n  Possible C/C++ prototypes are:\n    pySpParMat()\n    pySpParMat(int64_t,int64_t,pyDenseParVec *,pyDenseParVec *,pyDenseParVec *)\n    pySpParMat(pySpParMatBool const &)\n    pySpParMat(pySpParMatObj1 const &)\n    pySpParMat(pySpParMatObj2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_getnnz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMat_getnnz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_getnnz" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      result = (arg1)->getnnz();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMat_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_getnee" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      result = (arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_getnrow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMat_getnrow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_getnrow" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      result = (arg1)->getnrow();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_getncol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMat_getncol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_getncol" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      result = (arg1)->getncol();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_load" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_save" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:pySpParMat_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "9"" of type '" "double""'");
  } 
  arg9 = static_cast< double >(val9);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:pySpParMat_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:pySpParMat_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMat_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMat_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMat_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_GenGraph500Edges",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_GenGraph500Edges",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_GenGraph500Edges(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParMat_GenGraph500Edges__SWIG_7(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_GenGraph500Edges__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pySpParMat_GenGraph500Edges__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pySpParMat_GenGraph500Edges__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pySpParMat_GenGraph500Edges__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_pySpParMat_GenGraph500Edges__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_pySpParMat_GenGraph500Edges__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_pySpParMat_GenGraph500Edges__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_GenGraph500Edges'.\n  Possible C/C++ prototypes are:\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double,double,double,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double,double,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool)\n    GenGraph500Edges(int,pyDenseParVec *,int)\n    GenGraph500Edges(int,pyDenseParVec *)\n    GenGraph500Edges(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMat_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_copy" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParMat *arg2 = 0 ;
  pySpParMat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat___iadd__" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat___iadd__" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat___iadd__" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  {
    try {
      {
        pySpParMat &_result_ref = (arg1)->operator +=((pySpParMat const &)*arg2);
        result = (pySpParMat *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParMat *arg2 = 0 ;
  pySpParMat *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_assign",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_assign" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_assign" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_assign" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  {
    try {
      {
        pySpParMat &_result_ref = (arg1)->assign((pySpParMat const &)*arg2);
        result = (pySpParMat *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpGEMM__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParMat *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpGEMM" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpGEMM" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpGEMM__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParMat *arg2 = 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_SpGEMM",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpGEMM" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  {
    try {
      result = (arg1)->SpGEMM(*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParMat *arg2 = 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat___mul__" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat___mul__" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat___mul__" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  {
    try {
      result = (arg1)->operator *(*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SubsRef",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SubsRef" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat___getitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat___getitem__" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_removeSelfLoops(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMat_removeSelfLoops",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_removeSelfLoops" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      result = (arg1)->removeSelfLoops();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Apply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Apply" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Apply" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Apply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Apply" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Apply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMat_Apply__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMat_Apply__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_Apply'.\n  Possible C/C++ prototypes are:\n    Apply(op::UnaryFunction *)\n    Apply(op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_DimWiseApply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = 0 ;
  op::BinaryFunction *arg4 = (op::BinaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMat_DimWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_DimWiseApply" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_DimWiseApply" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMat_DimWiseApply" "', argument " "4"" of type '" "op::BinaryFunction *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunction * >(argp4);
  {
    try {
      (arg1)->DimWiseApply(arg2,(pyDenseParVec const &)*arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_DimWiseApply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMat_DimWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_DimWiseApply" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_DimWiseApply" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMat_DimWiseApply" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  {
    try {
      (arg1)->DimWiseApply(arg2,(pyDenseParVec const &)*arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_DimWiseApply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pySpParMat_DimWiseApply__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pySpParMat_DimWiseApply__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_DimWiseApply'.\n  Possible C/C++ prototypes are:\n    DimWiseApply(int,pyDenseParVec const &,op::BinaryFunction *)\n    DimWiseApply(int,pyDenseParVec const &,op::BinaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Prune__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_Prune",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Prune" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Prune" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      (arg1)->Prune(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Prune__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_Prune",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Prune" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Prune" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      (arg1)->Prune(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Prune(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMat_Prune__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMat_Prune__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_Prune'.\n  Possible C/C++ prototypes are:\n    Prune(op::UnaryFunction *)\n    Prune(op::UnaryPredicateObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Count" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Count" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  double arg4 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMat_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Reduce" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMat_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_Reduce",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Reduce" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Reduce__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  op::UnaryFunction *arg4 = (op::UnaryFunction *) 0 ;
  double arg5 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMat_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Reduce" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMat_Reduce" "', argument " "4"" of type '" "op::UnaryFunction *""'"); 
  }
  arg4 = reinterpret_cast< op::UnaryFunction * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMat_Reduce" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Reduce__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  op::UnaryFunction *arg4 = (op::UnaryFunction *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMat_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Reduce" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMat_Reduce" "', argument " "4"" of type '" "op::UnaryFunction *""'"); 
  }
  arg4 = reinterpret_cast< op::UnaryFunction * >(argp4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Reduce__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMat_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Reduce" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMat_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMat_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMat_Reduce" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Reduce__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMat_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Reduce" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMat_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMat_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMat_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_Reduce__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pySpParMat_Reduce__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pySpParMat_Reduce__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pySpParMat_Reduce__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pySpParMat_Reduce__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pySpParMat_Reduce__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(int,op::BinaryFunction *,double)\n    Reduce(int,op::BinaryFunction *)\n    Reduce(int,op::BinaryFunction *,op::UnaryFunction *,double)\n    Reduce(int,op::BinaryFunction *,op::UnaryFunction *)\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMat_Transpose",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Transpose" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      (arg1)->Transpose();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pyDenseParVec *arg2 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg4 = (pyDenseParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMat_Find",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Find" "', argument " "1"" of type '" "pySpParMat const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Find" "', argument " "2"" of type '" "pyDenseParVec *""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_Find" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMat_Find" "', argument " "4"" of type '" "pyDenseParVec *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVec * >(argp4);
  {
    try {
      ((pySpParMat const *)arg1)->Find(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV_inplace__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV_inplace",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV_inplace" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pySpParVec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pySpParVec &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV_inplace" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      (arg1)->SpMV_inplace(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV_inplace__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV_inplace",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV_inplace" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV_inplace" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      (arg1)->SpMV_inplace(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_SpMV'.\n  Possible C/C++ prototypes are:\n    SpMV(pySpParVec const &,op::Semiring *)\n    SpMV(pyDenseParVec const &,op::Semiring *)\n    SpMV(pySpParVec const &,op::SemiringObj *)\n    SpMV(pyDenseParVec const &,op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV_inplace__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV_inplace",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV_inplace" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pySpParVec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pySpParVec &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV_inplace" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      (arg1)->SpMV_inplace(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV_inplace__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpMV_inplace",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpMV_inplace" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpMV_inplace" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpMV_inplace" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      (arg1)->SpMV_inplace(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpMV_inplace(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV_inplace__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV_inplace__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV_inplace__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpMV_inplace__SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_SpMV_inplace'.\n  Possible C/C++ prototypes are:\n    SpMV_inplace(pySpParVec &,op::Semiring *)\n    SpMV_inplace(pyDenseParVec &,op::Semiring *)\n    SpMV_inplace(pySpParVec &,op::SemiringObj *)\n    SpMV_inplace(pyDenseParVec &,op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Square__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  op::Semiring *arg2 = (op::Semiring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_Square",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Square" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Square" "', argument " "2"" of type '" "op::Semiring *""'"); 
  }
  arg2 = reinterpret_cast< op::Semiring * >(argp2);
  {
    try {
      (arg1)->Square(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Square__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  op::SemiringObj *arg2 = (op::SemiringObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMat_Square",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_Square" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_Square" "', argument " "2"" of type '" "op::SemiringObj *""'"); 
  }
  arg2 = reinterpret_cast< op::SemiringObj * >(argp2);
  {
    try {
      (arg1)->Square(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Square(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__Semiring, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMat_Square__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMat_Square__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_Square'.\n  Possible C/C++ prototypes are:\n    Square(op::Semiring *)\n    Square(op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpGEMM__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  pySpParMat *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMat_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMat_SpGEMM" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMat_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMat_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMat_SpGEMM" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_SpGEMM(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMat_SpGEMM__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpGEMM__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMat_SpGEMM__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMat_SpGEMM'.\n  Possible C/C++ prototypes are:\n    SpGEMM(pySpParMat &,op::Semiring *)\n    SpGEMM(pySpParMat &)\n    SpGEMM(pySpParMat &,op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Column(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMat_Column")) SWIG_fail;
  {
    try {
      result = (int)pySpParMat::Column();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMat_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMat_Row")) SWIG_fail;
  {
    try {
      result = (int)pySpParMat::Row();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pySpParMat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = (pySpParMat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pySpParMat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pySpParMat" "', argument " "1"" of type '" "pySpParMat *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pySpParMat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pySpParMat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWiseMult__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  bool arg3 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseMult",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseMult" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseMult" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "EWiseMult" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = EWiseMult((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  double arg5 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  Obj1 arg5 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Obj1,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj1""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj1""'");
    } else {
      Obj1 * temp = reinterpret_cast< Obj1 * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMatObj1 const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMatObj1 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMatObj1 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  Obj2 arg5 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Obj2,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj2""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj2""'");
    } else {
      Obj2 * temp = reinterpret_cast< Obj2 * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMatObj2 const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMatObj2 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMatObj2 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  double arg5 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  double arg7 ;
  double arg8 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "EWiseApply" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "EWiseApply" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = EWiseApply((pySpParMat const &)*arg1,(pySpParMat const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatBool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pySpParMatBool")) SWIG_fail;
  {
    try {
      result = (pySpParMatBool *)new pySpParMatBool();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatBool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  int64_t arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg4 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg5 = (pyDenseParVec *) 0 ;
  pySpParMatBool *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pySpParMatBool",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pySpParMatBool" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pySpParMatBool" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_pySpParMatBool" "', argument " "4"" of type '" "pyDenseParVec *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVec * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_pySpParMatBool" "', argument " "5"" of type '" "pyDenseParVec *""'"); 
  }
  arg5 = reinterpret_cast< pyDenseParVec * >(argp5);
  {
    try {
      result = (pySpParMatBool *)new pySpParMatBool(arg1,arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatBool__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMat *arg1 = 0 ;
  pySpParMatBool *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParMatBool",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMat const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMat * >(argp1);
  {
    try {
      result = (pySpParMatBool *)new pySpParMatBool((pySpParMat const &)*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatBool__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = 0 ;
  pySpParMatBool *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParMatBool",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (pySpParMatBool *)new pySpParMatBool((pySpParMatBool const &)*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatBool__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = 0 ;
  pySpParMatBool *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParMatBool",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      result = (pySpParMatBool *)new pySpParMatBool((pySpParMatObj1 const &)*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatBool__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = 0 ;
  pySpParMatBool *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParMatBool",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pySpParMatBool" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      result = (pySpParMatBool *)new pySpParMatBool((pySpParMatObj2 const &)*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatBool(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pySpParMatBool__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pySpParMatBool__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pySpParMatBool__SWIG_3(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pySpParMatBool__SWIG_4(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_pySpParMatBool__SWIG_5(self, args);
    }
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_pySpParMatBool__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_pySpParMatBool'.\n  Possible C/C++ prototypes are:\n    pySpParMatBool()\n    pySpParMatBool(int64_t,int64_t,pyDenseParVec *,pyDenseParVec *,pyDenseParVec *)\n    pySpParMatBool(pySpParMat const &)\n    pySpParMatBool(pySpParMatBool const &)\n    pySpParMatBool(pySpParMatObj1 const &)\n    pySpParMatBool(pySpParMatObj2 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_getnnz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatBool_getnnz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_getnnz" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (arg1)->getnnz();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatBool_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_getnee" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_getnrow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatBool_getnrow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_getnrow" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (arg1)->getnrow();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_getncol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatBool_getncol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_getncol" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (arg1)->getncol();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_load" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_save" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  double val9 ;
  int ecode9 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOOO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  ecode9 = SWIG_AsVal_double(obj8, &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "9"" of type '" "double""'");
  } 
  arg9 = static_cast< double >(val9);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6,arg7);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double arg6 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  bool arg5 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  int arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_GenGraph500Edges",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_GenGraph500Edges" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      result = (double)(arg1)->GenGraph500Edges(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_GenGraph500Edges(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[10];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 9); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_7(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_4(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_2(self, args);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_1(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_double(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      return _wrap_pySpParMatBool_GenGraph500Edges__SWIG_0(self, args);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatBool_GenGraph500Edges'.\n  Possible C/C++ prototypes are:\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double,double,double,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double,double,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool,double)\n    GenGraph500Edges(int,pyDenseParVec *,int,bool)\n    GenGraph500Edges(int,pyDenseParVec *,int)\n    GenGraph500Edges(int,pyDenseParVec *)\n    GenGraph500Edges(int)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatBool_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_copy" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pySpParMatBool *arg2 = 0 ;
  pySpParMatBool *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool___iadd__" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool___iadd__" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool___iadd__" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  {
    try {
      {
        pySpParMatBool &_result_ref = (arg1)->operator +=((pySpParMatBool const &)*arg2);
        result = (pySpParMatBool *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pySpParMatBool *arg2 = 0 ;
  pySpParMatBool *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_assign",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_assign" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_assign" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_assign" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  {
    try {
      {
        pySpParMatBool &_result_ref = (arg1)->assign((pySpParMatBool const &)*arg2);
        result = (pySpParMatBool *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SpGEMM(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pySpParMatBool *arg2 = 0 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_SpGEMM",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_SpGEMM" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_SpGEMM" "', argument " "2"" of type '" "pySpParMatBool &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_SpGEMM" "', argument " "2"" of type '" "pySpParMatBool &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  {
    try {
      result = (arg1)->SpGEMM(*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pySpParMatBool *arg2 = 0 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool___mul__" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool___mul__" "', argument " "2"" of type '" "pySpParMatBool &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool___mul__" "', argument " "2"" of type '" "pySpParMatBool &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  {
    try {
      result = (arg1)->operator *(*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool_SubsRef",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_SubsRef" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool___getitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool___getitem__" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_removeSelfLoops(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatBool_removeSelfLoops",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_removeSelfLoops" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      result = (arg1)->removeSelfLoops();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Apply" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_Apply" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Prune(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_Prune",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Prune" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_Prune" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      (arg1)->Prune(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Count" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_Count" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  double arg4 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatBool_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Reduce" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParMatBool_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool_Reduce",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Reduce" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Reduce__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  op::UnaryFunction *arg4 = (op::UnaryFunction *) 0 ;
  double arg5 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMatBool_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Reduce" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatBool_Reduce" "', argument " "4"" of type '" "op::UnaryFunction *""'"); 
  }
  arg4 = reinterpret_cast< op::UnaryFunction * >(argp4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pySpParMatBool_Reduce" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Reduce__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  op::UnaryFunction *arg4 = (op::UnaryFunction *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatBool_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Reduce" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_Reduce" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatBool_Reduce" "', argument " "4"" of type '" "op::UnaryFunction *""'"); 
  }
  arg4 = reinterpret_cast< op::UnaryFunction * >(argp4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Reduce__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMatBool_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Reduce" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatBool_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatBool_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMatBool_Reduce" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Reduce__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMatBool_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Reduce" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatBool_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatBool_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatBool_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatBool_Reduce__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pySpParMatBool_Reduce__SWIG_3(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pySpParMatBool_Reduce__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pySpParMatBool_Reduce__SWIG_2(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pySpParMatBool_Reduce__SWIG_5(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pySpParMatBool_Reduce__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatBool_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(int,op::BinaryFunction *,double)\n    Reduce(int,op::BinaryFunction *)\n    Reduce(int,op::BinaryFunction *,op::UnaryFunction *,double)\n    Reduce(int,op::BinaryFunction *,op::UnaryFunction *)\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatBool_Transpose",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Transpose" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      (arg1)->Transpose();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pyDenseParVec *arg2 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg4 = (pyDenseParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatBool_Find",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Find" "', argument " "1"" of type '" "pySpParMatBool const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_Find" "', argument " "2"" of type '" "pyDenseParVec *""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_Find" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatBool_Find" "', argument " "4"" of type '" "pyDenseParVec *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVec * >(argp4);
  {
    try {
      ((pySpParMatBool const *)arg1)->Find(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SpMV__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_SpMV" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_SpMV" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SpMV__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_SpMV" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_SpMV" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SpMV(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatBool_SpMV__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatBool_SpMV__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatBool_SpMV'.\n  Possible C/C++ prototypes are:\n    SpMV(pySpParVec const &,op::Semiring *)\n    SpMV(pyDenseParVec const &,op::Semiring *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SpMV_inplace__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool_SpMV_inplace",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "2"" of type '" "pySpParVec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "2"" of type '" "pySpParVec &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      (arg1)->SpMV_inplace(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SpMV_inplace__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::Semiring *arg3 = (op::Semiring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatBool_SpMV_inplace",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatBool_SpMV_inplace" "', argument " "3"" of type '" "op::Semiring *""'"); 
  }
  arg3 = reinterpret_cast< op::Semiring * >(argp3);
  {
    try {
      (arg1)->SpMV_inplace(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_SpMV_inplace(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatBool_SpMV_inplace__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__Semiring, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatBool_SpMV_inplace__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatBool_SpMV_inplace'.\n  Possible C/C++ prototypes are:\n    SpMV_inplace(pySpParVec &,op::Semiring *)\n    SpMV_inplace(pyDenseParVec &,op::Semiring *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Square__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  op::Semiring *arg2 = (op::Semiring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_Square",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Square" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_Square" "', argument " "2"" of type '" "op::Semiring *""'"); 
  }
  arg2 = reinterpret_cast< op::Semiring * >(argp2);
  {
    try {
      (arg1)->Square(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Square__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  op::SemiringObj *arg2 = (op::SemiringObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatBool_Square",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatBool_Square" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatBool_Square" "', argument " "2"" of type '" "op::SemiringObj *""'"); 
  }
  arg2 = reinterpret_cast< op::SemiringObj * >(argp2);
  {
    try {
      (arg1)->Square(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Square(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__Semiring, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMatBool_Square__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParMatBool_Square__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatBool_Square'.\n  Possible C/C++ prototypes are:\n    Square(op::Semiring *)\n    Square(op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Column(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMatBool_Column")) SWIG_fail;
  {
    try {
      result = (int)pySpParMatBool::Column();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatBool_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMatBool_Row")) SWIG_fail;
  {
    try {
      result = (int)pySpParMatBool::Row();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pySpParMatBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = (pySpParMatBool *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pySpParMatBool",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pySpParMatBool" "', argument " "1"" of type '" "pySpParMatBool *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pySpParMatBool_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pySpParMatBool, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWiseMult__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = 0 ;
  pySpParMatBool *arg2 = 0 ;
  bool arg3 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseMult",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseMult" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseMult" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "EWiseMult" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    try {
      result = EWiseMult((pySpParMatBool const &)*arg1,(pySpParMatBool const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = 0 ;
  pySpParMatBool *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  double arg5 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      result = EWiseApply((pySpParMatBool const &)*arg1,(pySpParMatBool const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = 0 ;
  pySpParMatBool *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = EWiseApply((pySpParMatBool const &)*arg1,(pySpParMatBool const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatBool *arg1 = 0 ;
  pySpParMatBool *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  pySpParMatBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatBool const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatBool * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatBool,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatBool const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatBool * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  {
    try {
      result = EWiseApply((pySpParMatBool const &)*arg1,(pySpParMatBool const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatBool(static_cast< const pySpParMatBool& >(result))), SWIGTYPE_p_pySpParMatBool, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatObj1__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pySpParMatObj1")) SWIG_fail;
  {
    try {
      result = (pySpParMatObj1 *)new pySpParMatObj1();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatObj1__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  int64_t arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg4 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj1 *arg5 = (pyDenseParVecObj1 *) 0 ;
  pySpParMatObj1 *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pySpParMatObj1",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pySpParMatObj1" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pySpParMatObj1" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pySpParMatObj1" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_pySpParMatObj1" "', argument " "4"" of type '" "pyDenseParVec *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVec * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_pySpParMatObj1" "', argument " "5"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg5 = reinterpret_cast< pyDenseParVecObj1 * >(argp5);
  {
    try {
      result = (pySpParMatObj1 *)new pySpParMatObj1(arg1,arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatObj1(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pySpParMatObj1__SWIG_0(self, args);
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_pySpParMatObj1__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_pySpParMatObj1'.\n  Possible C/C++ prototypes are:\n    pySpParMatObj1()\n    pySpParMatObj1(int64_t,int64_t,pyDenseParVec *,pyDenseParVec *,pyDenseParVecObj1 *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj1_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_getnee" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      result = (arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_getnrow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj1_getnrow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_getnrow" "', argument " "1"" of type '" "pySpParMatObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      result = ((pySpParMatObj1 const *)arg1)->getnrow();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_getncol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj1_getncol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_getncol" "', argument " "1"" of type '" "pySpParMatObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      result = ((pySpParMatObj1 const *)arg1)->getncol();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj1_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_load" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj1_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_save" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj1_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_copy" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  pySpParMatObj1 *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj1_assign",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_assign" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_assign" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_assign" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  {
    try {
      {
        pySpParMatObj1 &_result_ref = (arg1)->assign((pySpParMatObj1 const &)*arg2);
        result = (pySpParMatObj1 *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpGEMM__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParMat *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpGEMM__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj1 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj1 &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpGEMM__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj2 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj2 &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpGEMM" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpGEMM(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpGEMM__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpGEMM__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpGEMM__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatObj1_SpGEMM'.\n  Possible C/C++ prototypes are:\n    SpGEMM(pySpParMat &,op::SemiringObj *)\n    SpGEMM(pySpParMatObj1 &,op::SemiringObj *)\n    SpGEMM(pySpParMatObj2 &,op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SubsRef",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SubsRef" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1___getitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1___getitem__" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_removeSelfLoops(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj1_removeSelfLoops",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_removeSelfLoops" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      result = (arg1)->removeSelfLoops();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj1_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Apply" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_DimWiseApply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int arg2 ;
  pyDenseParVecObj1 *arg3 = 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatObj1_DimWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_DimWiseApply" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj1_DimWiseApply" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVecObj1 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj1_DimWiseApply" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  {
    try {
      (arg1)->DimWiseApply(arg2,(pyDenseParVecObj1 const &)*arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Prune(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj1_Prune",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Prune" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_Prune" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      (arg1)->Prune(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj1_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Count" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_Count" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMatObj1_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Reduce" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj1_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj1_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj1_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMatObj1_Reduce" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMatObj1_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Reduce" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj1_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj1_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj1_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Reduce__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int arg2 ;
  pyDenseParVecObj1 *arg3 = (pyDenseParVecObj1 *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  Obj1 arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMatObj1_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Reduce" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj1_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_Reduce" "', argument " "3"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVecObj1 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj1_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj1_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_Obj1,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pySpParMatObj1_Reduce" "', argument " "6"" of type '" "Obj1""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_Reduce" "', argument " "6"" of type '" "Obj1""'");
    } else {
      Obj1 * temp = reinterpret_cast< Obj1 * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Reduce__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  int arg2 ;
  pyDenseParVecObj1 *arg3 = (pyDenseParVecObj1 *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMatObj1_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Reduce" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj1_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_Reduce" "', argument " "3"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVecObj1 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj1_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj1_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pySpParMatObj1_Reduce__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pySpParMatObj1_Reduce__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pySpParMatObj1_Reduce__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pySpParMatObj1_Reduce__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatObj1_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *)\n    Reduce(int,pyDenseParVecObj1 *,op::BinaryFunctionObj *,op::UnaryFunctionObj *,Obj1)\n    Reduce(int,pyDenseParVecObj1 *,op::BinaryFunctionObj *,op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj1_Transpose",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Transpose" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      (arg1)->Transpose();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pyDenseParVec *arg2 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj1 *arg4 = (pyDenseParVecObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatObj1_Find",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Find" "', argument " "1"" of type '" "pySpParMatObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_Find" "', argument " "2"" of type '" "pyDenseParVec *""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_Find" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj1_Find" "', argument " "4"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVecObj1 * >(argp4);
  {
    try {
      ((pySpParMatObj1 const *)arg1)->Find(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpMV__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpMV" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpMV__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpMV" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVecObj1 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpMV__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpMV" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVecObj2 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpMV__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpMV" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpMV__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpMV" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVecObj1 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpMV__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj1_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_SpMV" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj1_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj1_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVecObj2 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_SpMV(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpMV__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpMV__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpMV__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpMV__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpMV__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj1_SpMV__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatObj1_SpMV'.\n  Possible C/C++ prototypes are:\n    SpMV(pySpParVec const &,op::SemiringObj *)\n    SpMV(pySpParVecObj1 const &,op::SemiringObj *)\n    SpMV(pySpParVecObj2 const &,op::SemiringObj *)\n    SpMV(pyDenseParVec const &,op::SemiringObj *)\n    SpMV(pyDenseParVecObj1 const &,op::SemiringObj *)\n    SpMV(pyDenseParVecObj2 const &,op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  op::SemiringObj *arg2 = (op::SemiringObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj1_Square",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj1_Square" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj1_Square" "', argument " "2"" of type '" "op::SemiringObj *""'"); 
  }
  arg2 = reinterpret_cast< op::SemiringObj * >(argp2);
  {
    try {
      (arg1)->Square(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Column(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMatObj1_Column")) SWIG_fail;
  {
    try {
      result = (int)pySpParMatObj1::Column();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj1_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMatObj1_Row")) SWIG_fail;
  {
    try {
      result = (int)pySpParMatObj1::Row();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pySpParMatObj1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = (pySpParMatObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pySpParMatObj1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pySpParMatObj1" "', argument " "1"" of type '" "pySpParMatObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pySpParMatObj1_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pySpParMatObj1, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  Obj1 arg5 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Obj1,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj1""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj1""'");
    } else {
      Obj1 * temp = reinterpret_cast< Obj1 * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = EWiseApply((pySpParMatObj1 const &)*arg1,(pySpParMatObj1 const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_17(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  Obj2 arg5 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Obj2,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj2""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj2""'");
    } else {
      Obj2 * temp = reinterpret_cast< Obj2 * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = EWiseApply((pySpParMatObj1 const &)*arg1,(pySpParMatObj2 const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_18(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj1 *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  double arg5 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      result = EWiseApply((pySpParMatObj1 const &)*arg1,(pySpParMat const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatObj2__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pySpParMatObj2")) SWIG_fail;
  {
    try {
      result = (pySpParMatObj2 *)new pySpParMatObj2();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatObj2__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  int64_t arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg4 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj2 *arg5 = (pyDenseParVecObj2 *) 0 ;
  pySpParMatObj2 *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_pySpParMatObj2",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pySpParMatObj2" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pySpParMatObj2" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_pySpParMatObj2" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_pySpParMatObj2" "', argument " "4"" of type '" "pyDenseParVec *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVec * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_pySpParMatObj2" "', argument " "5"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg5 = reinterpret_cast< pyDenseParVecObj2 * >(argp5);
  {
    try {
      result = (pySpParMatObj2 *)new pySpParMatObj2(arg1,arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParMatObj2(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 5); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_pySpParMatObj2__SWIG_0(self, args);
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_pySpParMatObj2__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_pySpParMatObj2'.\n  Possible C/C++ prototypes are:\n    pySpParMatObj2()\n    pySpParMatObj2(int64_t,int64_t,pyDenseParVec *,pyDenseParVec *,pyDenseParVecObj2 *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj2_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_getnee" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      result = (arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_getnrow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj2_getnrow",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_getnrow" "', argument " "1"" of type '" "pySpParMatObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      result = ((pySpParMatObj2 const *)arg1)->getnrow();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_getncol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj2_getncol",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_getncol" "', argument " "1"" of type '" "pySpParMatObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      result = ((pySpParMatObj2 const *)arg1)->getncol();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj2_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_load" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj2_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_save" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj2_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_copy" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  pySpParMatObj2 *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj2_assign",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_assign" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_assign" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_assign" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  {
    try {
      {
        pySpParMatObj2 &_result_ref = (arg1)->assign((pySpParMatObj2 const &)*arg2);
        result = (pySpParMatObj2 *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpGEMM__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParMat *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  pySpParMat result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpGEMM" "', argument " "2"" of type '" "pySpParMat &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMat(static_cast< const pySpParMat& >(result))), SWIGTYPE_p_pySpParMat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpGEMM__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj2 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj2 &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpGEMM__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  pySpParMatObj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpGEMM",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj1 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpGEMM" "', argument " "2"" of type '" "pySpParMatObj1 &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpGEMM" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpGEMM(*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj1(static_cast< const pySpParMatObj1& >(result))), SWIGTYPE_p_pySpParMatObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpGEMM(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpGEMM__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpGEMM__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pySpParMatObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpGEMM__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatObj2_SpGEMM'.\n  Possible C/C++ prototypes are:\n    SpGEMM(pySpParMat &,op::SemiringObj *)\n    SpGEMM(pySpParMatObj2 &,op::SemiringObj *)\n    SpGEMM(pySpParMatObj1 &,op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SubsRef",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SubsRef" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SubsRef" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2___getitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2___getitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2___getitem__" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2___getitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_removeSelfLoops(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj2_removeSelfLoops",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_removeSelfLoops" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      result = (arg1)->removeSelfLoops();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj2_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Apply" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_DimWiseApply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int arg2 ;
  pyDenseParVecObj2 *arg3 = 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatObj2_DimWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_DimWiseApply" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj2_DimWiseApply" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_DimWiseApply" "', argument " "3"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVecObj2 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj2_DimWiseApply" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  {
    try {
      (arg1)->DimWiseApply(arg2,(pyDenseParVecObj2 const &)*arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Prune(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj2_Prune",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Prune" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_Prune" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      (arg1)->Prune(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj2_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Count" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_Count" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMatObj2_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Reduce" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj2_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj2_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj2_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pySpParMatObj2_Reduce" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int arg2 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMatObj2_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Reduce" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj2_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_Reduce" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj2_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj2_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Reduce__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int arg2 ;
  pyDenseParVecObj2 *arg3 = (pyDenseParVecObj2 *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  Obj2 arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pySpParMatObj2_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Reduce" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj2_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_Reduce" "', argument " "3"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVecObj2 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj2_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj2_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_Obj2,  0  | 0);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pySpParMatObj2_Reduce" "', argument " "6"" of type '" "Obj2""'"); 
    }  
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_Reduce" "', argument " "6"" of type '" "Obj2""'");
    } else {
      Obj2 * temp = reinterpret_cast< Obj2 * >(argp6);
      arg6 = *temp;
      if (SWIG_IsNewObj(res6)) delete temp;
    }
  }
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Reduce__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  int arg2 ;
  pyDenseParVecObj2 *arg3 = (pyDenseParVecObj2 *) 0 ;
  op::BinaryFunctionObj *arg4 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg5 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pySpParMatObj2_Reduce",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Reduce" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParMatObj2_Reduce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_Reduce" "', argument " "3"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVecObj2 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj2_Reduce" "', argument " "4"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryFunctionObj * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "pySpParMatObj2_Reduce" "', argument " "5"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg5 = reinterpret_cast< op::UnaryFunctionObj * >(argp5);
  {
    try {
      (arg1)->Reduce(arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pySpParMatObj2_Reduce__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_pySpParMatObj2_Reduce__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pySpParMatObj2_Reduce__SWIG_2(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pySpParMatObj2_Reduce__SWIG_0(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatObj2_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n    Reduce(int,pyDenseParVec *,op::BinaryFunctionObj *,op::UnaryFunctionObj *)\n    Reduce(int,pyDenseParVecObj2 *,op::BinaryFunctionObj *,op::UnaryFunctionObj *,Obj2)\n    Reduce(int,pyDenseParVecObj2 *,op::BinaryFunctionObj *,op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParMatObj2_Transpose",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Transpose" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      (arg1)->Transpose();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pyDenseParVec *arg2 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg3 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj2 *arg4 = (pyDenseParVecObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParMatObj2_Find",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Find" "', argument " "1"" of type '" "pySpParMatObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_Find" "', argument " "2"" of type '" "pyDenseParVec *""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_Find" "', argument " "3"" of type '" "pyDenseParVec *""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParMatObj2_Find" "', argument " "4"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg4 = reinterpret_cast< pyDenseParVecObj2 * >(argp4);
  {
    try {
      ((pySpParMatObj2 const *)arg1)->Find(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpMV__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpMV" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpMV__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpMV" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVecObj2 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpMV__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpMV" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pySpParVecObj1 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpMV__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpMV" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpMV__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpMV" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVecObj2 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpMV__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::SemiringObj *arg3 = (op::SemiringObj *) 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParMatObj2_SpMV",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_SpMV" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParMatObj2_SpMV" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParMatObj2_SpMV" "', argument " "3"" of type '" "op::SemiringObj *""'"); 
  }
  arg3 = reinterpret_cast< op::SemiringObj * >(argp3);
  {
    try {
      result = (arg1)->SpMV((pyDenseParVecObj1 const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_SpMV(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpMV__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpMV__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpMV__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpMV__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpMV__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__SemiringObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParMatObj2_SpMV__SWIG_5(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParMatObj2_SpMV'.\n  Possible C/C++ prototypes are:\n    SpMV(pySpParVec const &,op::SemiringObj *)\n    SpMV(pySpParVecObj2 const &,op::SemiringObj *)\n    SpMV(pySpParVecObj1 const &,op::SemiringObj *)\n    SpMV(pyDenseParVec const &,op::SemiringObj *)\n    SpMV(pyDenseParVecObj2 const &,op::SemiringObj *)\n    SpMV(pyDenseParVecObj1 const &,op::SemiringObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Square(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  op::SemiringObj *arg2 = (op::SemiringObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParMatObj2_Square",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParMatObj2_Square" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParMatObj2_Square" "', argument " "2"" of type '" "op::SemiringObj *""'"); 
  }
  arg2 = reinterpret_cast< op::SemiringObj * >(argp2);
  {
    try {
      (arg1)->Square(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Column(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMatObj2_Column")) SWIG_fail;
  {
    try {
      result = (int)pySpParMatObj2::Column();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParMatObj2_Row(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":pySpParMatObj2_Row")) SWIG_fail;
  {
    try {
      result = (int)pySpParMatObj2::Row();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pySpParMatObj2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = (pySpParMatObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pySpParMatObj2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pySpParMatObj2" "', argument " "1"" of type '" "pySpParMatObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pySpParMatObj2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pySpParMatObj2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_19(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = 0 ;
  pySpParMatObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  Obj2 arg5 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Obj2,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj2""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj2""'");
    } else {
      Obj2 * temp = reinterpret_cast< Obj2 * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = EWiseApply((pySpParMatObj2 const &)*arg1,(pySpParMatObj2 const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_20(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = 0 ;
  pySpParMatObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  Obj1 arg5 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  void *argp5 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMatObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMatObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMatObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_Obj1,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj1""'"); 
    }  
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "5"" of type '" "Obj1""'");
    } else {
      Obj1 * temp = reinterpret_cast< Obj1 * >(argp5);
      arg5 = *temp;
      if (SWIG_IsNewObj(res5)) delete temp;
    }
  }
  {
    try {
      result = EWiseApply((pySpParMatObj2 const &)*arg1,(pySpParMatObj1 const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_21(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParMatObj2 *arg1 = 0 ;
  pySpParMat *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  bool arg4 ;
  double arg5 ;
  pySpParMatObj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParMatObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParMatObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParMatObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParMat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParMat const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParMat * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      result = EWiseApply((pySpParMatObj2 const &)*arg1,(pySpParMat const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParMatObj2(static_cast< const pySpParMatObj2& >(result))), SWIGTYPE_p_pySpParMatObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParVec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  pySpParVec *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParVec",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pySpParVec" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  {
    try {
      result = (pySpParVec *)new pySpParVec(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParVec, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_dense(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_dense",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_dense" "', argument " "1"" of type '" "pySpParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = ((pySpParVec const *)arg1)->dense();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_getnee" "', argument " "1"" of type '" "pySpParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = ((pySpParVec const *)arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_getnnz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_getnnz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_getnnz" "', argument " "1"" of type '" "pySpParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = ((pySpParVec const *)arg1)->getnnz();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___len__" "', argument " "1"" of type '" "pySpParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = ((pySpParVec const *)arg1)->__len__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_len(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_len",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_len" "', argument " "1"" of type '" "pySpParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = ((pySpParVec const *)arg1)->len();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___add__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___add__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___add__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      result = (arg1)->operator +((pySpParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___sub__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___sub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___sub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      result = (arg1)->operator -((pySpParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___add__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___add__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___add__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->operator +((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___add____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_pySpParVec___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___sub__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___sub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___sub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->operator -((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___sub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_pySpParVec___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  pySpParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___iadd__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___iadd__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___iadd__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      {
        pySpParVec &_result_ref = (arg1)->operator +=((pySpParVec const &)*arg2);
        result = (pySpParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  pySpParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___isub__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___isub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___isub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      {
        pySpParVec &_result_ref = (arg1)->operator -=((pySpParVec const &)*arg2);
        result = (pySpParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pySpParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___iadd__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___iadd__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___iadd__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      {
        pySpParVec &_result_ref = (arg1)->operator +=((pyDenseParVec const &)*arg2);
        result = (pySpParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___iadd____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec___iadd__'.\n  Possible C/C++ prototypes are:\n    operator +=(pySpParVec const &)\n    operator +=(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pySpParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___isub__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___isub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___isub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      {
        pySpParVec &_result_ref = (arg1)->operator -=((pyDenseParVec const &)*arg2);
        result = (pySpParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___isub____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec___isub__'.\n  Possible C/C++ prototypes are:\n    operator -=(pySpParVec const &)\n    operator -=(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_copy" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_any(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_any",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_any" "', argument " "1"" of type '" "pySpParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = (bool)((pySpParVec const *)arg1)->any();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_all(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_all",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_all" "', argument " "1"" of type '" "pySpParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = (bool)((pySpParVec const *)arg1)->all();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_intersectSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_intersectSize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_intersectSize" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_intersectSize" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec_intersectSize" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      result = (arg1)->intersectSize((pySpParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_printall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_printall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_printall" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      (arg1)->printall();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_load" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_save" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Count__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Count" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_Count" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Count__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Count" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_Count" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Count(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec_Count__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec_Count__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec_Count'.\n  Possible C/C++ prototypes are:\n    Count(op::UnaryFunction *)\n    Count(op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Apply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Apply" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_Apply" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Apply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Apply" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Apply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec_Apply__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec_Apply__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec_Apply'.\n  Possible C/C++ prototypes are:\n    Apply(op::UnaryFunction *)\n    Apply(op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_ApplyInd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_ApplyInd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_ApplyInd" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_ApplyInd" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->ApplyInd(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_SubsRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_SubsRef" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::BinaryFunction *arg2 = (op::BinaryFunction *) 0 ;
  op::UnaryFunction *arg3 = (op::UnaryFunction *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVec_Reduce",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Reduce" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_Reduce" "', argument " "2"" of type '" "op::BinaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunction * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVec_Reduce" "', argument " "3"" of type '" "op::UnaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunction * >(argp3);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::BinaryFunction *arg2 = (op::BinaryFunction *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_Reduce",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Reduce" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_Reduce" "', argument " "2"" of type '" "op::BinaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunction * >(argp2);
  {
    try {
      result = (double)(arg1)->Reduce(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Reduce__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  double arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParVec_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Reduce" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVec_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParVec_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec_Reduce__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVec_Reduce__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pySpParVec_Reduce__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(op::BinaryFunction *,op::UnaryFunction *)\n    Reduce(op::BinaryFunction *)\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_Sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_Sort" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = (arg1)->Sort();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_TopK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t arg2 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_TopK",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_TopK" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVec_TopK" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->TopK(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_setNumToInd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_setNumToInd",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_setNumToInd" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      (arg1)->setNumToInd();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_zeros(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  SwigValueWrapper<pySpParVec > result;
  long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_zeros",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "pySpParVec_zeros" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  {
    try {
      result = pySpParVec::zeros(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  int64_t arg2 ;
  SwigValueWrapper<pySpParVec > result;
  long long val1 ;
  int ecode1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec_range",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "pySpParVec_range" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVec_range" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = pySpParVec::range(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec_abs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec_abs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec_abs" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = (arg1)->abs();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___delitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___delitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___delitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      (arg1)->__delitem__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___delitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVec___delitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      (arg1)->__delitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___delitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParVec___delitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec___delitem__'.\n  Possible C/C++ prototypes are:\n    __delitem__(pyDenseParVec const &)\n    __delitem__(int64_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t arg2 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___getitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVec___getitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (double)(arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  double arg2 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___getitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVec___getitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (double)(arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___getitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___getitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVec___getitem____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParVec___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParVec___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec___getitem__'.\n  Possible C/C++ prototypes are:\n    __getitem__(int64_t)\n    __getitem__(double)\n    __getitem__(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  int64_t arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___setitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVec___setitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pySpParVec___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      (arg1)->__setitem__(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___setitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVec___setitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pySpParVec___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      (arg1)->__setitem__(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___setitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___setitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___setitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVec___setitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVec___setitem__" "', argument " "3"" of type '" "pyDenseParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pyDenseParVec * >(argp3);
  {
    try {
      (arg1)->__setitem__((pyDenseParVec const &)*arg2,(pyDenseParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___setitem____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  char *arg2 = (char *) 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___setitem__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVec___setitem__" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pySpParVec___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      (arg1)->__setitem__((char const *)arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pyDenseParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVec___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pySpParVec___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pySpParVec___setitem____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pySpParVec___setitem____SWIG_3(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVec___setitem__'.\n  Possible C/C++ prototypes are:\n    __setitem__(int64_t,double)\n    __setitem__(double,double)\n    __setitem__(pyDenseParVec const &,pyDenseParVec const &)\n    __setitem__(char const *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVec___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVec___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVec___repr__" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = (char *)(arg1)->__repr__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pySpParVec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pySpParVec",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pySpParVec" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pySpParVec_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pySpParVec, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_22(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  bool arg5 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_23(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_24(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_25(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  double arg7 ;
  Obj1 *arg8 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "EWiseApply" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj1 *""'"); 
  }
  arg8 = reinterpret_cast< Obj1 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_26(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  double arg7 ;
  Obj2 *arg8 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "EWiseApply" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj2 *""'"); 
  }
  arg8 = reinterpret_cast< Obj2 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_27(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  double arg7 ;
  double arg8 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "EWiseApply" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "EWiseApply" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_28(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  double arg7 ;
  Obj1 *arg8 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "EWiseApply" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj1 *""'"); 
  }
  arg8 = reinterpret_cast< Obj1 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_29(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  double arg7 ;
  Obj2 *arg8 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "EWiseApply" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj2 *""'"); 
  }
  arg8 = reinterpret_cast< Obj2 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_30(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  double arg7 ;
  double arg8 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  ecode7 = SWIG_AsVal_double(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "EWiseApply" "', argument " "7"" of type '" "double""'");
  } 
  arg7 = static_cast< double >(val7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "EWiseApply" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_31(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pyDenseParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_32(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pyDenseParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_33(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pyDenseParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_34(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pyDenseParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_35(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pyDenseParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_36(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      result = EWiseApply((pySpParVec const &)*arg1,(pyDenseParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseMult__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  bool arg3 ;
  double arg4 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseMult",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseMult" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult" "', argument " "1"" of type '" "pySpParVec const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseMult" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "EWiseMult" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseMult" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = EWiseMult((pySpParVec const &)*arg1,(pyDenseParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseMult(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_EWiseMult__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatBool, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_EWiseMult__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_EWiseMult__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'EWiseMult'.\n  Possible C/C++ prototypes are:\n    EWiseMult(pySpParMat const &,pySpParMat const &,bool)\n    EWiseMult(pySpParMatBool const &,pySpParMatBool const &,bool)\n    EWiseMult(pySpParVec const &,pyDenseParVec const &,bool,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseMult_inplacefirst(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  bool arg3 ;
  double arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:EWiseMult_inplacefirst",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseMult_inplacefirst" "', argument " "1"" of type '" "pySpParVec &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult_inplacefirst" "', argument " "1"" of type '" "pySpParVec &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseMult_inplacefirst" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseMult_inplacefirst" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "EWiseMult_inplacefirst" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "EWiseMult_inplacefirst" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      EWiseMult_inplacefirst(*arg1,(pyDenseParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParVecObj1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  pySpParVecObj1 *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParVecObj1",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pySpParVecObj1" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  {
    try {
      result = (pySpParVecObj1 *)new pySpParVecObj1(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_dense(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_dense",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_dense" "', argument " "1"" of type '" "pySpParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = ((pySpParVecObj1 const *)arg1)->dense();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_getnee" "', argument " "1"" of type '" "pySpParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = ((pySpParVecObj1 const *)arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___len__" "', argument " "1"" of type '" "pySpParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = ((pySpParVecObj1 const *)arg1)->__len__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_len(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_len",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_len" "', argument " "1"" of type '" "pySpParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = ((pySpParVecObj1 const *)arg1)->len();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_copy" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_any(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_any",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_any" "', argument " "1"" of type '" "pySpParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = (bool)((pySpParVecObj1 const *)arg1)->any();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_all(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_all",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_all" "', argument " "1"" of type '" "pySpParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = (bool)((pySpParVecObj1 const *)arg1)->all();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_intersectSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_intersectSize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_intersectSize" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_intersectSize" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVecObj1_intersectSize" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  {
    try {
      result = (arg1)->intersectSize((pySpParVecObj1 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_printall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_printall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_printall" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      (arg1)->printall();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_load" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_save" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_Count" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_Count" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_Apply" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_ApplyInd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_ApplyInd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_ApplyInd" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_ApplyInd" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->ApplyInd(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_SubsRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_SubsRef" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVecObj1_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  Obj1 *arg4 = (Obj1 *) 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParVecObj1_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_Reduce" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj1_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParVecObj1_Reduce" "', argument " "4"" of type '" "Obj1 *""'"); 
  }
  arg4 = reinterpret_cast< Obj1 * >(argp4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  double arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParVecObj1_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_Reduce" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj1_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParVecObj1_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Obj1, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pySpParVecObj1_Reduce__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pySpParVecObj1_Reduce__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVecObj1_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,Obj1 *)\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1_Sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_Sort" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = (arg1)->Sort();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1_TopK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  int64_t arg2 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1_TopK",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1_TopK" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj1_TopK" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->TopK(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___delitem__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj1___delitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      (arg1)->__delitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  int64_t arg2 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___getitem__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj1___getitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  double arg2 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___getitem__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj1___getitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___getitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj1___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___getitem__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVecObj1___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVecObj1___getitem____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParVecObj1___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParVecObj1___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVecObj1___getitem__'.\n  Possible C/C++ prototypes are:\n    __getitem__(int64_t)\n    __getitem__(double)\n    __getitem__(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  int64_t arg2 ;
  Obj1 *arg3 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVecObj1___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___setitem__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj1___setitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj1___setitem__" "', argument " "3"" of type '" "Obj1 const *""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      (arg1)->__setitem__(arg2,(Obj1 const *)arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  double arg2 ;
  Obj1 *arg3 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVecObj1___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___setitem__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj1___setitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj1___setitem__" "', argument " "3"" of type '" "Obj1 const *""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      (arg1)->__setitem__(arg2,(Obj1 const *)arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  char *arg2 = (char *) 0 ;
  Obj1 *arg3 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVecObj1___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___setitem__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj1___setitem__" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj1___setitem__" "', argument " "3"" of type '" "Obj1 const *""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      (arg1)->__setitem__((char const *)arg2,(Obj1 const *)arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVecObj1___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVecObj1___setitem____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVecObj1___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVecObj1___setitem__'.\n  Possible C/C++ prototypes are:\n    __setitem__(int64_t,Obj1 const *)\n    __setitem__(double,Obj1 const *)\n    __setitem__(char const *,Obj1 const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj1___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj1___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj1___repr__" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      result = (char *)(arg1)->__repr__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pySpParVecObj1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = (pySpParVecObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pySpParVecObj1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pySpParVecObj1" "', argument " "1"" of type '" "pySpParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pySpParVecObj1_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pySpParVecObj1, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_37(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj1 *arg7 = (Obj1 *) 0 ;
  Obj1 *arg8 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj1 *""'"); 
  }
  arg7 = reinterpret_cast< Obj1 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj1 *""'"); 
  }
  arg8 = reinterpret_cast< Obj1 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_38(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj1 *arg7 = (Obj1 *) 0 ;
  Obj2 *arg8 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj1 *""'"); 
  }
  arg7 = reinterpret_cast< Obj1 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj2 *""'"); 
  }
  arg8 = reinterpret_cast< Obj2 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_39(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj1 *arg7 = (Obj1 *) 0 ;
  double arg8 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj1 *""'"); 
  }
  arg7 = reinterpret_cast< Obj1 * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "EWiseApply" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_40(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj1 *arg7 = (Obj1 *) 0 ;
  Obj1 *arg8 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj1 *""'"); 
  }
  arg7 = reinterpret_cast< Obj1 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj1 *""'"); 
  }
  arg8 = reinterpret_cast< Obj1 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_41(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj1 *arg7 = (Obj1 *) 0 ;
  Obj2 *arg8 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj1 *""'"); 
  }
  arg7 = reinterpret_cast< Obj1 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj2 *""'"); 
  }
  arg8 = reinterpret_cast< Obj2 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_42(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj1 *arg7 = (Obj1 *) 0 ;
  double arg8 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj1 *""'"); 
  }
  arg7 = reinterpret_cast< Obj1 * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "EWiseApply" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_43(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pyDenseParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_44(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pyDenseParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_45(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pyDenseParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_46(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pyDenseParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_47(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pyDenseParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_48(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj1 *arg1 = 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj1 const &)*arg1,(pyDenseParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pySpParVecObj2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  pySpParVecObj2 *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_pySpParVecObj2",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pySpParVecObj2" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  {
    try {
      result = (pySpParVecObj2 *)new pySpParVecObj2(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_dense(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_dense",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_dense" "', argument " "1"" of type '" "pySpParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = ((pySpParVecObj2 const *)arg1)->dense();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_getnee" "', argument " "1"" of type '" "pySpParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = ((pySpParVecObj2 const *)arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___len__" "', argument " "1"" of type '" "pySpParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = ((pySpParVecObj2 const *)arg1)->__len__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_len(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_len",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_len" "', argument " "1"" of type '" "pySpParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = ((pySpParVecObj2 const *)arg1)->len();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_copy" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_any(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_any",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_any" "', argument " "1"" of type '" "pySpParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = (bool)((pySpParVecObj2 const *)arg1)->any();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_all(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_all",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_all" "', argument " "1"" of type '" "pySpParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = (bool)((pySpParVecObj2 const *)arg1)->all();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_intersectSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_intersectSize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_intersectSize" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_intersectSize" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVecObj2_intersectSize" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  {
    try {
      result = (arg1)->intersectSize((pySpParVecObj2 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_printall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_printall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_printall" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      (arg1)->printall();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_load" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_save" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_Count" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_Count" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_Apply" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_ApplyInd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_ApplyInd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_ApplyInd" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_ApplyInd" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->ApplyInd(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_SubsRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_SubsRef" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVecObj2_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  Obj2 *arg4 = (Obj2 *) 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParVecObj2_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_Reduce" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj2_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pySpParVecObj2_Reduce" "', argument " "4"" of type '" "Obj2 *""'"); 
  }
  arg4 = reinterpret_cast< Obj2 * >(argp4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  double arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pySpParVecObj2_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_Reduce" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj2_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pySpParVecObj2_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Obj2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pySpParVecObj2_Reduce__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pySpParVecObj2_Reduce__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVecObj2_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,Obj2 *)\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2_Sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_Sort" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = (arg1)->Sort();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2_TopK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  int64_t arg2 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2_TopK",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2_TopK" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj2_TopK" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->TopK(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___delitem__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  int64_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___delitem__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj2___delitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      (arg1)->__delitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  int64_t arg2 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___getitem__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj2___getitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  double arg2 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___getitem__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj2___getitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___getitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pySpParVecObj2___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___getitem__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pySpParVecObj2___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pySpParVecObj2___getitem____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParVecObj2___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pySpParVecObj2___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVecObj2___getitem__'.\n  Possible C/C++ prototypes are:\n    __getitem__(int64_t)\n    __getitem__(double)\n    __getitem__(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  int64_t arg2 ;
  Obj2 *arg3 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVecObj2___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___setitem__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj2___setitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj2___setitem__" "', argument " "3"" of type '" "Obj2 const *""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      (arg1)->__setitem__(arg2,(Obj2 const *)arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  double arg2 ;
  Obj2 *arg3 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVecObj2___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___setitem__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pySpParVecObj2___setitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj2___setitem__" "', argument " "3"" of type '" "Obj2 const *""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      (arg1)->__setitem__(arg2,(Obj2 const *)arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  char *arg2 = (char *) 0 ;
  Obj2 *arg3 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pySpParVecObj2___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___setitem__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pySpParVecObj2___setitem__" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pySpParVecObj2___setitem__" "', argument " "3"" of type '" "Obj2 const *""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      (arg1)->__setitem__((char const *)arg2,(Obj2 const *)arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVecObj2___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVecObj2___setitem____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pySpParVecObj2___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pySpParVecObj2___setitem__'.\n  Possible C/C++ prototypes are:\n    __setitem__(int64_t,Obj2 const *)\n    __setitem__(double,Obj2 const *)\n    __setitem__(char const *,Obj2 const *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pySpParVecObj2___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pySpParVecObj2___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pySpParVecObj2___repr__" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      result = (char *)(arg1)->__repr__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pySpParVecObj2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = (pySpParVecObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pySpParVecObj2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pySpParVecObj2" "', argument " "1"" of type '" "pySpParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pySpParVecObj2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pySpParVecObj2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_49(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj2 *arg7 = (Obj2 *) 0 ;
  Obj2 *arg8 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj2 *""'"); 
  }
  arg7 = reinterpret_cast< Obj2 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj2 *""'"); 
  }
  arg8 = reinterpret_cast< Obj2 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_50(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj2 *arg7 = (Obj2 *) 0 ;
  Obj1 *arg8 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj2 *""'"); 
  }
  arg7 = reinterpret_cast< Obj2 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj1 *""'"); 
  }
  arg8 = reinterpret_cast< Obj1 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_51(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj2 *arg7 = (Obj2 *) 0 ;
  double arg8 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj2 *""'"); 
  }
  arg7 = reinterpret_cast< Obj2 * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "EWiseApply" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_52(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj2 *arg7 = (Obj2 *) 0 ;
  Obj2 *arg8 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj2 *""'"); 
  }
  arg7 = reinterpret_cast< Obj2 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj2 *""'"); 
  }
  arg8 = reinterpret_cast< Obj2 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_53(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj2 *arg7 = (Obj2 *) 0 ;
  Obj1 *arg8 = (Obj1 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj2 *""'"); 
  }
  arg7 = reinterpret_cast< Obj2 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "EWiseApply" "', argument " "8"" of type '" "Obj1 *""'"); 
  }
  arg8 = reinterpret_cast< Obj1 * >(argp8);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_54(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  bool arg6 ;
  Obj2 *arg7 = (Obj2 *) 0 ;
  double arg8 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  double val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_bool(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "EWiseApply" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "EWiseApply" "', argument " "7"" of type '" "Obj2 *""'"); 
  }
  arg7 = reinterpret_cast< Obj2 * >(argp7);
  ecode8 = SWIG_AsVal_double(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "EWiseApply" "', argument " "8"" of type '" "double""'");
  } 
  arg8 = static_cast< double >(val8);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pySpParVec const &)*arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_55(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pyDenseParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_56(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pyDenseParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_57(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pyDenseParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_58(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pyDenseParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_59(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pyDenseParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply__SWIG_60(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVecObj2 *arg1 = 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "1"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      result = EWiseApply((pySpParVecObj2 const &)*arg1,(pyDenseParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWiseApply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[9];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 8); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EWiseApply__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EWiseApply__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EWiseApply__SWIG_8(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EWiseApply__SWIG_11(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatBool, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EWiseApply__SWIG_15(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_EWiseApply__SWIG_24(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_EWiseApply__SWIG_10(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_EWiseApply__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatBool, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_EWiseApply__SWIG_14(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_EWiseApply__SWIG_7(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_EWiseApply__SWIG_23(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_EWiseApply__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatBool, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatBool, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_EWiseApply__SWIG_13(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Obj1, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_EWiseApply__SWIG_3(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_EWiseApply__SWIG_9(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Obj1, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_EWiseApply__SWIG_16(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Obj2, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_EWiseApply__SWIG_17(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_EWiseApply__SWIG_18(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Obj2, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_EWiseApply__SWIG_19(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Obj1, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_EWiseApply__SWIG_20(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMatObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_EWiseApply__SWIG_21(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_EWiseApply__SWIG_22(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMatObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_Obj2, 0);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_EWiseApply__SWIG_6(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_EWiseApply__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_EWiseApply__SWIG_31(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_EWiseApply__SWIG_32(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_EWiseApply__SWIG_33(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_EWiseApply__SWIG_34(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_EWiseApply__SWIG_35(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_EWiseApply__SWIG_36(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_43(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_44(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_45(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_46(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_47(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_48(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_55(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_56(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_57(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_58(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_59(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_EWiseApply__SWIG_60(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj1, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_42(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_30(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParMat, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParMat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_12(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj1, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_25(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj2, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_26(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_27(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj1, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_28(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj2, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj2, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_49(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj2, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj1, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_50(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj2, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_51(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj2, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj2, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_52(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj2, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj1, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_53(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj2, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_54(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj2, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_29(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj1, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj1, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_37(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj1, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj2, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_38(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj1, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  {
                    int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_39(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj1, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj1, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_40(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pySpParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_bool(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_Obj1, 0);
                _v = SWIG_CheckState(res);
                if (_v) {
                  void *vptr = 0;
                  int res = SWIG_ConvertPtr(argv[7], &vptr, SWIGTYPE_p_Obj2, 0);
                  _v = SWIG_CheckState(res);
                  if (_v) {
                    return _wrap_EWiseApply__SWIG_41(self, args);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'EWiseApply'.\n  Possible C/C++ prototypes are:\n    EWiseApply(pySpParMat const &,pySpParMat const &,op::BinaryFunction *,bool,double)\n    EWiseApply(pySpParMat const &,pySpParMat const &,op::BinaryFunction *,bool)\n    EWiseApply(pySpParMat const &,pySpParMat const &,op::BinaryFunction *)\n    EWiseApply(pySpParMat const &,pySpParMatObj1 const &,op::BinaryFunctionObj *,bool,Obj1)\n    EWiseApply(pySpParMat const &,pySpParMatObj1 const &,op::BinaryFunctionObj *,bool)\n    EWiseApply(pySpParMat const &,pySpParMatObj1 const &,op::BinaryFunctionObj *)\n    EWiseApply(pySpParMat const &,pySpParMatObj2 const &,op::BinaryFunctionObj *,bool,Obj2)\n    EWiseApply(pySpParMat const &,pySpParMatObj2 const &,op::BinaryFunctionObj *,bool)\n    EWiseApply(pySpParMat const &,pySpParMatObj2 const &,op::BinaryFunctionObj *)\n    EWiseApply(pySpParMat const &,pySpParMat const &,op::BinaryFunctionObj *,bool,double)\n    EWiseApply(pySpParMat const &,pySpParMat const &,op::BinaryFunctionObj *,bool)\n    EWiseApply(pySpParMat const &,pySpParMat const &,op::BinaryFunctionObj *)\n    EWiseApply(pySpParMat const &,pySpParMat const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,double,double)\n    EWiseApply(pySpParMatBool const &,pySpParMatBool const &,op::BinaryFunction *,bool,double)\n    EWiseApply(pySpParMatBool const &,pySpParMatBool const &,op::BinaryFunction *,bool)\n    EWiseApply(pySpParMatBool const &,pySpParMatBool const &,op::BinaryFunction *)\n    EWiseApply(pySpParMatObj1 const &,pySpParMatObj1 const &,op::BinaryFunctionObj *,bool,Obj1)\n    EWiseApply(pySpParMatObj1 const &,pySpParMatObj2 const &,op::BinaryFunctionObj *,bool,Obj2)\n    EWiseApply(pySpParMatObj1 const &,pySpParMat const &,op::BinaryFunctionObj *,bool,double)\n    EWiseApply(pySpParMatObj2 const &,pySpParMatObj2 const &,op::BinaryFunctionObj *,bool,Obj2)\n    EWiseApply(pySpParMatObj2 const &,pySpParMatObj1 const &,op::BinaryFunctionObj *,bool,Obj1)\n    EWiseApply(pySpParMatObj2 const &,pySpParMat const &,op::BinaryFunctionObj *,bool,double)\n    EWiseApply(pySpParVec const &,pySpParVec const &,op::BinaryFunction *,bool,bool)\n    EWiseApply(pySpParVec const &,pySpParVec const &,op::BinaryFunction *,bool)\n    EWiseApply(pySpParVec const &,pySpParVec const &,op::BinaryFunction *)\n    EWiseApply(pySpParVec const &,pySpParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,double,Obj1 *)\n    EWiseApply(pySpParVec const &,pySpParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,double,Obj2 *)\n    EWiseApply(pySpParVec const &,pySpParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,double,double)\n    EWiseApply(pySpParVec const &,pySpParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,double,Obj1 *)\n    EWiseApply(pySpParVec const &,pySpParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,double,Obj2 *)\n    EWiseApply(pySpParVec const &,pySpParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,double,double)\n    EWiseApply(pySpParVec const &,pyDenseParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,double)\n    EWiseApply(pySpParVec const &,pyDenseParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,double)\n    EWiseApply(pySpParVec const &,pyDenseParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,double)\n    EWiseApply(pySpParVec const &,pyDenseParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,double)\n    EWiseApply(pySpParVec const &,pyDenseParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,double)\n    EWiseApply(pySpParVec const &,pyDenseParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,double)\n    EWiseApply(pySpParVecObj1 const &,pySpParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,Obj1 *,Obj1 *)\n    EWiseApply(pySpParVecObj1 const &,pySpParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,Obj1 *,Obj2 *)\n    EWiseApply(pySpParVecObj1 const &,pySpParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,Obj1 *,double)\n    EWiseApply(pySpParVecObj1 const &,pySpParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,Obj1 *,Obj1 *)\n    EWiseApply(pySpParVecObj1 const &,pySpParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,Obj1 *,Obj2 *)\n    EWiseApply(pySpParVecObj1 const &,pySpParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,Obj1 *,double)\n    EWiseApply(pySpParVecObj1 const &,pyDenseParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj1 const &,pyDenseParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj1 const &,pyDenseParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj1 const &,pyDenseParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj1 const &,pyDenseParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj1 const &,pyDenseParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj2 const &,pySpParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,Obj2 *,Obj2 *)\n    EWiseApply(pySpParVecObj2 const &,pySpParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,Obj2 *,Obj1 *)\n    EWiseApply(pySpParVecObj2 const &,pySpParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,bool,Obj2 *,double)\n    EWiseApply(pySpParVecObj2 const &,pySpParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,Obj2 *,Obj2 *)\n    EWiseApply(pySpParVecObj2 const &,pySpParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,Obj2 *,Obj1 *)\n    EWiseApply(pySpParVecObj2 const &,pySpParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,bool,Obj2 *,double)\n    EWiseApply(pySpParVecObj2 const &,pyDenseParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVecObj2 const &,pyDenseParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVecObj2 const &,pyDenseParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVecObj2 const &,pyDenseParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVecObj2 const &,pyDenseParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVecObj2 const &,pyDenseParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pyDenseParVec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  double arg2 ;
  pyDenseParVec *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pyDenseParVec",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pyDenseParVec" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pyDenseParVec" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (pyDenseParVec *)new pyDenseParVec(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pyDenseParVec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  double arg2 ;
  double arg3 ;
  pyDenseParVec *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_pyDenseParVec",&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pyDenseParVec" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_pyDenseParVec" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_pyDenseParVec" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      result = (pyDenseParVec *)new pyDenseParVec(arg1,arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pyDenseParVec(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_pyDenseParVec__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_pyDenseParVec__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_pyDenseParVec'.\n  Possible C/C++ prototypes are:\n    pyDenseParVec(int64_t,double)\n    pyDenseParVec(int64_t,double,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_sparse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_sparse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_sparse" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = ((pyDenseParVec const *)arg1)->sparse();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_sparse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  double arg2 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_sparse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_sparse" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec_sparse" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = ((pyDenseParVec const *)arg1)->sparse(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_sparse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pyDenseParVec_sparse__SWIG_0(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVec_sparse__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_sparse'.\n  Possible C/C++ prototypes are:\n    sparse()\n    sparse(double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_len(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_len",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_len" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = ((pyDenseParVec const *)arg1)->len();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___len__" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = ((pyDenseParVec const *)arg1)->__len__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_add",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_add" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_add" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_add" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      (arg1)->add((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_add",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_add" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_add" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_add" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      (arg1)->add((pySpParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_add(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_add__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_add__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_add'.\n  Possible C/C++ prototypes are:\n    add(pyDenseParVec const &)\n    add(pySpParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___iadd____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___iadd__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___iadd__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___iadd__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator +=((pyDenseParVec const &)*arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___isub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___isub__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___isub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___isub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator -=((pyDenseParVec const &)*arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___iadd____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___iadd__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___iadd__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___iadd__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator +=((pySpParVec const &)*arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___isub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___isub__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___isub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___isub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator -=((pySpParVec const &)*arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___imul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___imul__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___imul__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___imul__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator *=((pyDenseParVec const &)*arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___imul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___imul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___imul__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___imul__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___imul__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator *=((pySpParVec const &)*arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___imul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___imul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___imul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec___imul__'.\n  Possible C/C++ prototypes are:\n    operator *=(pyDenseParVec const &)\n    operator *=(pySpParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___add____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___add__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___add__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___add__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->operator +((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___sub__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___sub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___sub__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->operator -((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___add____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___add__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___add__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___add__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      result = (arg1)->operator +((pySpParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___sub__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___sub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___sub__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      result = (arg1)->operator -((pySpParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___mul____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___mul__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___mul__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___mul__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->operator *((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___mul____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___mul__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___mul__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___mul__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___mul__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  {
    try {
      result = (arg1)->operator *((pySpParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___mul__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___mul____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___mul____SWIG_1(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___eq__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___eq__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___eq__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->operator ==((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___ne__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___ne__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___ne__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->operator !=((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_copy" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_SubsRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_SubsRef" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_RandPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_RandPerm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_RandPerm" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      (arg1)->RandPerm();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_Sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Sort" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = (arg1)->Sort();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_TopK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t arg2 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_TopK",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_TopK" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec_TopK" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->TopK(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_printall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_printall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_printall" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      (arg1)->printall();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_getnee" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = ((pyDenseParVec const *)arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_getnnz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_getnnz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_getnnz" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = ((pyDenseParVec const *)arg1)->getnnz();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_getnz(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_getnz",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_getnz" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = ((pyDenseParVec const *)arg1)->getnz();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_any(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_any",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_any" "', argument " "1"" of type '" "pyDenseParVec const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = (bool)((pyDenseParVec const *)arg1)->any();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_load" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_save" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Count__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Count" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Count" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Count__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Count" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Count" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Count(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_Count__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_Count__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_Count'.\n  Possible C/C++ prototypes are:\n    Count(op::UnaryFunction *)\n    Count(op::UnaryPredicateObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::BinaryFunction *arg2 = (op::BinaryFunction *) 0 ;
  op::UnaryFunction *arg3 = (op::UnaryFunction *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec_Reduce",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Reduce" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Reduce" "', argument " "2"" of type '" "op::BinaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunction * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_Reduce" "', argument " "3"" of type '" "op::UnaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunction * >(argp3);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::BinaryFunction *arg2 = (op::BinaryFunction *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_Reduce",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Reduce" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Reduce" "', argument " "2"" of type '" "op::BinaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunction * >(argp2);
  {
    try {
      result = (double)(arg1)->Reduce(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Reduce__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  double arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Reduce" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pyDenseParVec_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_Reduce__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVec_Reduce__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pyDenseParVec_Reduce__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(op::BinaryFunction *,op::UnaryFunction *)\n    Reduce(op::BinaryFunction *)\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Find__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_Find",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Find" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Find" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = (arg1)->Find(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Find__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_Find",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Find" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Find" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Find(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Find(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_Find__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_Find__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_Find'.\n  Possible C/C++ prototypes are:\n    Find(op::UnaryFunction *)\n    Find(op::UnaryPredicateObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  SwigValueWrapper<pySpParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___getitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___getitem__" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVec(static_cast< const pySpParVec& >(result))), SWIGTYPE_p_pySpParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_FindInds__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_FindInds",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_FindInds" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_FindInds" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = (arg1)->FindInds(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_FindInds__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_FindInds",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_FindInds" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_FindInds" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->FindInds(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_FindInds(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_FindInds__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_FindInds__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_FindInds'.\n  Possible C/C++ prototypes are:\n    FindInds(op::UnaryFunction *)\n    FindInds(op::UnaryPredicateObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Apply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Apply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Apply" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Apply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_Apply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_Apply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_Apply__SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec_Apply__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_Apply'.\n  Possible C/C++ prototypes are:\n    Apply(op::UnaryFunction *)\n    Apply(op::UnaryFunctionObj *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_ApplyMasked__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunction *arg2 = (op::UnaryFunction *) 0 ;
  pySpParVec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec_ApplyMasked",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_ApplyMasked" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_ApplyMasked" "', argument " "2"" of type '" "op::UnaryFunction *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pySpParVec * >(argp3);
  {
    try {
      (arg1)->ApplyMasked(arg2,(pySpParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_ApplyMasked__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  pySpParVec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec_ApplyMasked",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_ApplyMasked" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_ApplyMasked" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pySpParVec * >(argp3);
  {
    try {
      (arg1)->ApplyMasked(arg2,(pySpParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_ApplyMasked(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pySpParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVec_ApplyMasked__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pySpParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVec_ApplyMasked__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_ApplyMasked'.\n  Possible C/C++ prototypes are:\n    ApplyMasked(op::UnaryFunction *,pySpParVec const &)\n    ApplyMasked(op::UnaryFunctionObj *,pySpParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  double arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  ecode5 = SWIG_AsVal_double(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVec_EWiseApply" "', argument " "5"" of type '" "double""'");
  } 
  arg5 = static_cast< double >(val5);
  {
    try {
      (arg1)->EWiseApply((pySpParVec const &)*arg2,arg3,arg4,arg5);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  {
    try {
      (arg1)->EWiseApply((pySpParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunction *arg3 = (op::BinaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunction *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunction * >(argp3);
  {
    try {
      (arg1)->EWiseApply((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj1 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj2 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVec_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVec_EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVec_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVec_EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVec_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pyDenseParVec_EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->EWiseApply((pySpParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj1 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj2 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVec_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVec_EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVec_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVec_EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply__SWIG_15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryPredicateObj *arg3 = (op::BinaryPredicateObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVec_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_EWiseApply" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec_EWiseApply" "', argument " "3"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryPredicateObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVec_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVec_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pyDenseParVec_EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->EWiseApply((pySpParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_EWiseApply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVec_EWiseApply__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVec_EWiseApply__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pyDenseParVec_EWiseApply__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVec_EWiseApply__SWIG_4(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVec_EWiseApply__SWIG_5(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVec_EWiseApply__SWIG_6(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVec_EWiseApply__SWIG_10(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVec_EWiseApply__SWIG_11(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVec_EWiseApply__SWIG_12(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunction, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_bool(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_double(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_pyDenseParVec_EWiseApply__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVec_EWiseApply__SWIG_7(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVec_EWiseApply__SWIG_8(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pyDenseParVec_EWiseApply__SWIG_9(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVec_EWiseApply__SWIG_13(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVec_EWiseApply__SWIG_14(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pyDenseParVec_EWiseApply__SWIG_15(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec_EWiseApply'.\n  Possible C/C++ prototypes are:\n    EWiseApply(pyDenseParVec const &,op::BinaryFunction *)\n    EWiseApply(pySpParVec const &,op::BinaryFunction *,bool,double)\n    EWiseApply(pySpParVec const &,op::BinaryFunction *,bool)\n    EWiseApply(pySpParVec const &,op::BinaryFunction *)\n    EWiseApply(pyDenseParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pySpParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,double)\n    EWiseApply(pyDenseParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *)\n    EWiseApply(pySpParVecObj1 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj2 const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVec const &,op::BinaryPredicateObj *,op::BinaryPredicateObj *,bool,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_range(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  int64_t arg2 ;
  SwigValueWrapper<pyDenseParVec > result;
  long long val1 ;
  int ecode1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec_range",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "pyDenseParVec_range" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec_range" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = pyDenseParVec::range(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec_abs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVec_abs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec_abs" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = (arg1)->abs();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___iadd____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  double arg2 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___iadd__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___iadd__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator +=(arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___iadd__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___iadd____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___iadd____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVec___iadd____SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec___iadd__'.\n  Possible C/C++ prototypes are:\n    operator +=(pyDenseParVec const &)\n    operator +=(pySpParVec const &)\n    operator +=(double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___add____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  double arg2 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___add__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___add__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (arg1)->operator +(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___add__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___add____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___add____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVec___add____SWIG_2(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___isub____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  double arg2 ;
  pyDenseParVec *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___isub__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___isub__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      {
        pyDenseParVec &_result_ref = (arg1)->operator -=(arg2);
        result = (pyDenseParVec *) &_result_ref;
      }
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___isub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___isub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___isub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVec___isub____SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec___isub__'.\n  Possible C/C++ prototypes are:\n    operator -=(pyDenseParVec const &)\n    operator -=(pySpParVec const &)\n    operator -=(double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___sub____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  double arg2 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___sub__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___sub__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (arg1)->operator -(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___sub____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVec___sub____SWIG_2(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___and__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___and__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___and__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___and__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___and__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->__and__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t arg2 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___getitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___getitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (double)(arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___getitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  double arg2 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___getitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___getitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = (double)(arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___getitem____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVec___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___getitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryFunction, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVec___getitem____SWIG_3(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVec___getitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVec___getitem____SWIG_2(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec___getitem__'.\n  Possible C/C++ prototypes are:\n    __getitem__(op::UnaryFunction *)\n    __getitem__(int64_t)\n    __getitem__(double)\n    __getitem__(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  int64_t arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___setitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___setitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pyDenseParVec___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      (arg1)->__setitem__(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  double arg2 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___setitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVec___setitem__" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pyDenseParVec___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      (arg1)->__setitem__(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  pySpParVec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___setitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVec___setitem__" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___setitem__" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pySpParVec * >(argp3);
  {
    try {
      (arg1)->__setitem__((pySpParVec const &)*arg2,(pySpParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___setitem____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  pySpParVec *arg2 = 0 ;
  double arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVec___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVec___setitem__" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVec___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVec___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "pyDenseParVec___setitem__" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    try {
      (arg1)->__setitem__((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVec___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pySpParVec, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVec___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pyDenseParVec___setitem____SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pyDenseParVec___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_pyDenseParVec___setitem____SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVec___setitem__'.\n  Possible C/C++ prototypes are:\n    __setitem__(int64_t,double)\n    __setitem__(double,double)\n    __setitem__(pySpParVec const &,pySpParVec const &)\n    __setitem__(pySpParVec const &,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pyDenseParVec(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pyDenseParVec",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pyDenseParVec" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pyDenseParVec_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pyDenseParVec, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_pyDenseParVecObj1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  Obj1 arg2 ;
  pyDenseParVecObj1 *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pyDenseParVecObj1",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pyDenseParVecObj1" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pyDenseParVecObj1" "', argument " "2"" of type '" "Obj1""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pyDenseParVecObj1" "', argument " "2"" of type '" "Obj1""'");
    } else {
      Obj1 * temp = reinterpret_cast< Obj1 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      result = (pyDenseParVecObj1 *)new pyDenseParVecObj1(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_sparse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_sparse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_sparse" "', argument " "1"" of type '" "pyDenseParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_sparse" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = ((pyDenseParVecObj1 const *)arg1)->sparse(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_sparse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1_sparse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_sparse" "', argument " "1"" of type '" "pyDenseParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj1 const *)arg1)->sparse();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_sparse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pyDenseParVecObj1_sparse__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVecObj1_sparse__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj1_sparse'.\n  Possible C/C++ prototypes are:\n    sparse(op::UnaryPredicateObj *)\n    sparse()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_len(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1_len",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_len" "', argument " "1"" of type '" "pyDenseParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj1 const *)arg1)->len();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1___len__" "', argument " "1"" of type '" "pyDenseParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj1 const *)arg1)->__len__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_copy" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_SubsRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_SubsRef" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_RandPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1_RandPerm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_RandPerm" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      (arg1)->RandPerm();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1_Sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_Sort" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      result = (arg1)->Sort();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_TopK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  int64_t arg2 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_TopK",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_TopK" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVecObj1_TopK" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->TopK(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_printall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1_printall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_printall" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      (arg1)->printall();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_getnee" "', argument " "1"" of type '" "pyDenseParVecObj1 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj1 const *)arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_load" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_save" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_Count" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_Count" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  Obj1 *arg4 = (Obj1 *) 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj1_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "4"" of type '" "Obj1 *""'"); 
  }
  arg4 = reinterpret_cast< Obj1 * >(argp4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  double arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj1_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pyDenseParVecObj1_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Obj1, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj1_Reduce__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pyDenseParVecObj1_Reduce__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj1_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,Obj1 *)\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_Find",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_Find" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_Find" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Find(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pySpParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1___getitem__" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1___getitem__" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj1(static_cast< const pySpParVecObj1& >(result))), SWIGTYPE_p_pySpParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_FindInds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_FindInds",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_FindInds" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_FindInds" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->FindInds(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_Apply" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_ApplyMasked(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  pySpParVec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVecObj1_ApplyMasked",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_ApplyMasked" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_ApplyMasked" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pySpParVec * >(argp3);
  {
    try {
      (arg1)->ApplyMasked(arg2,(pySpParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_EWiseApply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj1_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj1 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_EWiseApply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj1_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj2 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_EWiseApply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj1_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_EWiseApply__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVecObj1_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_EWiseApply__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVecObj1_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_EWiseApply__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVecObj1_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pyDenseParVecObj1_EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->EWiseApply((pySpParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1_EWiseApply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj1_EWiseApply__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj1_EWiseApply__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj1_EWiseApply__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVecObj1_EWiseApply__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVecObj1_EWiseApply__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pyDenseParVecObj1_EWiseApply__SWIG_5(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj1_EWiseApply'.\n  Possible C/C++ prototypes are:\n    EWiseApply(pyDenseParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pySpParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  int64_t arg2 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1___getitem__" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVecObj1___getitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___getitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj1 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj1___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1___getitem__" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj1(static_cast< const pyDenseParVecObj1& >(result))), SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVecObj1___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVecObj1___getitem____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVecObj1___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj1___getitem__'.\n  Possible C/C++ prototypes are:\n    __getitem__(op::UnaryPredicateObj *)\n    __getitem__(int64_t)\n    __getitem__(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  int64_t arg2 ;
  Obj1 *arg3 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVecObj1___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1___setitem__" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVecObj1___setitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1___setitem__" "', argument " "3"" of type '" "Obj1 *""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      (arg1)->__setitem__(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  pySpParVec *arg2 = 0 ;
  Obj1 *arg3 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVecObj1___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1___setitem__" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj1___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj1___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj1___setitem__" "', argument " "3"" of type '" "Obj1 *""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      (arg1)->__setitem__((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVecObj1___setitem____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj1, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVecObj1___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj1___setitem__'.\n  Possible C/C++ prototypes are:\n    __setitem__(int64_t,Obj1 *)\n    __setitem__(pySpParVec const &,Obj1 *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj1___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj1___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj1___repr__" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      result = (char *)(arg1)->__repr__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pyDenseParVecObj1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj1 *arg1 = (pyDenseParVecObj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pyDenseParVecObj1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj1, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pyDenseParVecObj1" "', argument " "1"" of type '" "pyDenseParVecObj1 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj1 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pyDenseParVecObj1_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pyDenseParVecObj1, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_pyDenseParVecObj2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int64_t arg1 ;
  Obj2 arg2 ;
  pyDenseParVecObj2 *result = 0 ;
  long long val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_pyDenseParVecObj2",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_pyDenseParVecObj2" "', argument " "1"" of type '" "int64_t""'");
  } 
  arg1 = static_cast< int64_t >(val1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_pyDenseParVecObj2" "', argument " "2"" of type '" "Obj2""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_pyDenseParVecObj2" "', argument " "2"" of type '" "Obj2""'");
    } else {
      Obj2 * temp = reinterpret_cast< Obj2 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      result = (pyDenseParVecObj2 *)new pyDenseParVecObj2(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_sparse__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_sparse",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_sparse" "', argument " "1"" of type '" "pyDenseParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_sparse" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = ((pyDenseParVecObj2 const *)arg1)->sparse(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_sparse__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2_sparse",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_sparse" "', argument " "1"" of type '" "pyDenseParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj2 const *)arg1)->sparse();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_sparse(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_pyDenseParVecObj2_sparse__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVecObj2_sparse__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj2_sparse'.\n  Possible C/C++ prototypes are:\n    sparse(op::UnaryPredicateObj *)\n    sparse()\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_len(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2_len",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_len" "', argument " "1"" of type '" "pyDenseParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj2 const *)arg1)->len();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2___len__" "', argument " "1"" of type '" "pyDenseParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj2 const *)arg1)->__len__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_copy" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      result = (arg1)->copy();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_SubsRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_SubsRef",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_SubsRef" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_SubsRef" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->SubsRef((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_RandPerm(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2_RandPerm",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_RandPerm" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      (arg1)->RandPerm();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2_Sort",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_Sort" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      result = (arg1)->Sort();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_TopK(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  int64_t arg2 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_TopK",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_TopK" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVecObj2_TopK" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->TopK(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_printall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2_printall",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_printall" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      (arg1)->printall();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_getnee(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2_getnee",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_getnee" "', argument " "1"" of type '" "pyDenseParVecObj2 const *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      result = ((pyDenseParVecObj2 const *)arg1)->getnee();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_load(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_load",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_load" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_load" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->load((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_save",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_save" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_save" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  {
    try {
      (arg1)->save((char const *)arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_Count(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  int64_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_Count",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_Count" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_Count" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Count(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_Reduce__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  Obj2 *arg4 = (Obj2 *) 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj2_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "4"" of type '" "Obj2 *""'"); 
  }
  arg4 = reinterpret_cast< Obj2 * >(argp4);
  {
    try {
      result = (arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_Reduce__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::BinaryFunctionObj *arg2 = (op::BinaryFunctionObj *) 0 ;
  op::UnaryFunctionObj *arg3 = (op::UnaryFunctionObj *) 0 ;
  double arg4 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj2_Reduce",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "2"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::BinaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "3"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunctionObj * >(argp3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "pyDenseParVecObj2_Reduce" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  {
    try {
      result = (double)(arg1)->Reduce(arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_Reduce(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_Obj2, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj2_Reduce__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__UnaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_pyDenseParVecObj2_Reduce__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj2_Reduce'.\n  Possible C/C++ prototypes are:\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,Obj2 *)\n    Reduce(op::BinaryFunctionObj *,op::UnaryFunctionObj *,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_Find(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_Find",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_Find" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_Find" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->Find(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pySpParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2___getitem__" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2___getitem__" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pySpParVecObj2(static_cast< const pySpParVecObj2& >(result))), SWIGTYPE_p_pySpParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_FindInds(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::UnaryPredicateObj *arg2 = (op::UnaryPredicateObj *) 0 ;
  SwigValueWrapper<pyDenseParVec > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_FindInds",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_FindInds" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_FindInds" "', argument " "2"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryPredicateObj * >(argp2);
  {
    try {
      result = (arg1)->FindInds(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVec(static_cast< const pyDenseParVec& >(result))), SWIGTYPE_p_pyDenseParVec, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_Apply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2_Apply",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_Apply" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_Apply" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  {
    try {
      (arg1)->Apply(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_ApplyMasked(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  op::UnaryFunctionObj *arg2 = (op::UnaryFunctionObj *) 0 ;
  pySpParVec *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVecObj2_ApplyMasked",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_ApplyMasked" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_op__UnaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_ApplyMasked" "', argument " "2"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunctionObj * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_ApplyMasked" "', argument " "3"" of type '" "pySpParVec const &""'"); 
  }
  arg3 = reinterpret_cast< pySpParVec * >(argp3);
  {
    try {
      (arg1)->ApplyMasked(arg2,(pySpParVec const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_EWiseApply__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pyDenseParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj2_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj2 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_EWiseApply__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pyDenseParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj2_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pyDenseParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVecObj1 const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_EWiseApply__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:pyDenseParVecObj2_EWiseApply",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  {
    try {
      (arg1)->EWiseApply((pyDenseParVec const &)*arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_EWiseApply__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pySpParVecObj2 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj2 *arg6 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVecObj2_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj2 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "6"" of type '" "Obj2 *""'"); 
  }
  arg6 = reinterpret_cast< Obj2 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj2 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_EWiseApply__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pySpParVecObj1 *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  Obj1 *arg6 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVecObj2_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVecObj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pySpParVecObj1 const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVecObj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "6"" of type '" "Obj1 *""'"); 
  }
  arg6 = reinterpret_cast< Obj1 * >(argp6);
  {
    try {
      (arg1)->EWiseApply((pySpParVecObj1 const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_EWiseApply__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pySpParVec *arg2 = 0 ;
  op::BinaryFunctionObj *arg3 = (op::BinaryFunctionObj *) 0 ;
  op::BinaryPredicateObj *arg4 = (op::BinaryPredicateObj *) 0 ;
  bool arg5 ;
  double arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOOO:pyDenseParVecObj2_EWiseApply",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "3"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg3 = reinterpret_cast< op::BinaryFunctionObj * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_op__BinaryPredicateObj, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "4"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg4 = reinterpret_cast< op::BinaryPredicateObj * >(argp4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ecode6 = SWIG_AsVal_double(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "pyDenseParVecObj2_EWiseApply" "', argument " "6"" of type '" "double""'");
  } 
  arg6 = static_cast< double >(val6);
  {
    try {
      (arg1)->EWiseApply((pySpParVec const &)*arg2,arg3,arg4,arg5,arg6);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2_EWiseApply(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 6); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj2_EWiseApply__SWIG_0(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj2_EWiseApply__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_pyDenseParVecObj2_EWiseApply__SWIG_2(self, args);
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj2, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVecObj2_EWiseApply__SWIG_3(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVecObj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_Obj1, 0);
              _v = SWIG_CheckState(res);
              if (_v) {
                return _wrap_pyDenseParVecObj2_EWiseApply__SWIG_4(self, args);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_op__BinaryPredicateObj, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_bool(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_double(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_pyDenseParVecObj2_EWiseApply__SWIG_5(self, args);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj2_EWiseApply'.\n  Possible C/C++ prototypes are:\n    EWiseApply(pyDenseParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pyDenseParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *)\n    EWiseApply(pySpParVecObj2 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj2 *)\n    EWiseApply(pySpParVecObj1 const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,Obj1 *)\n    EWiseApply(pySpParVec const &,op::BinaryFunctionObj *,op::BinaryPredicateObj *,bool,double)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  int64_t arg2 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2___getitem__" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVecObj2___getitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  {
    try {
      result = (arg1)->__getitem__(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___getitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pyDenseParVec *arg2 = 0 ;
  SwigValueWrapper<pyDenseParVecObj2 > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pyDenseParVecObj2___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2___getitem__" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2___getitem__" "', argument " "2"" of type '" "pyDenseParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      result = (arg1)->__getitem__((pyDenseParVec const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new pyDenseParVecObj2(static_cast< const pyDenseParVecObj2& >(result))), SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_op__UnaryPredicateObj, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVecObj2___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pyDenseParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_pyDenseParVecObj2___getitem____SWIG_2(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_pyDenseParVecObj2___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj2___getitem__'.\n  Possible C/C++ prototypes are:\n    __getitem__(op::UnaryPredicateObj *)\n    __getitem__(int64_t)\n    __getitem__(pyDenseParVec const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  int64_t arg2 ;
  Obj2 *arg3 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVecObj2___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2___setitem__" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pyDenseParVecObj2___setitem__" "', argument " "2"" of type '" "int64_t""'");
  } 
  arg2 = static_cast< int64_t >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2___setitem__" "', argument " "3"" of type '" "Obj2 *""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      (arg1)->__setitem__(arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  pySpParVec *arg2 = 0 ;
  Obj2 *arg3 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:pyDenseParVecObj2___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2___setitem__" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pySpParVec,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "pyDenseParVecObj2___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "pyDenseParVecObj2___setitem__" "', argument " "2"" of type '" "pySpParVec const &""'"); 
  }
  arg2 = reinterpret_cast< pySpParVec * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "pyDenseParVecObj2___setitem__" "', argument " "3"" of type '" "Obj2 *""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      (arg1)->__setitem__((pySpParVec const &)*arg2,arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pySpParVec, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVecObj2___setitem____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVecObj2, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_pyDenseParVecObj2___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'pyDenseParVecObj2___setitem__'.\n  Possible C/C++ prototypes are:\n    __setitem__(int64_t,Obj2 *)\n    __setitem__(pySpParVec const &,Obj2 *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_pyDenseParVecObj2___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pyDenseParVecObj2___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pyDenseParVecObj2___repr__" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      result = (char *)(arg1)->__repr__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pyDenseParVecObj2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVecObj2 *arg1 = (pyDenseParVecObj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pyDenseParVecObj2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVecObj2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pyDenseParVecObj2" "', argument " "1"" of type '" "pyDenseParVecObj2 *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVecObj2 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pyDenseParVecObj2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pyDenseParVecObj2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_UnaryFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::UnaryFunction *arg1 = (op::UnaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UnaryFunction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UnaryFunction" "', argument " "1"" of type '" "op::UnaryFunction *""'"); 
  }
  arg1 = reinterpret_cast< op::UnaryFunction * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UnaryFunction___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::UnaryFunction *arg1 = (op::UnaryFunction *) 0 ;
  doubleint arg2 ;
  doubleint result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UnaryFunction___call__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__UnaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnaryFunction___call__" "', argument " "1"" of type '" "op::UnaryFunction const *""'"); 
  }
  arg1 = reinterpret_cast< op::UnaryFunction * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_doubleint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnaryFunction___call__" "', argument " "2"" of type '" "doubleint const""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UnaryFunction___call__" "', argument " "2"" of type '" "doubleint const""'");
    } else {
      doubleint * temp = reinterpret_cast< doubleint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      result = ((op::UnaryFunction const *)arg1)->operator ()(arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new doubleint(static_cast< const doubleint& >(result))), SWIGTYPE_p_doubleint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UnaryFunction_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__UnaryFunction, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double arg1 ;
  SwigValueWrapper<op::UnaryFunction > result;
  double val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:set",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "set" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  {
    try {
      result = op::set(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_identity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::UnaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":identity")) SWIG_fail;
  {
    try {
      result = op::identity();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_safemultinv(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::UnaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":safemultinv")) SWIG_fail;
  {
    try {
      result = op::safemultinv();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_abs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::UnaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":abs")) SWIG_fail;
  {
    try {
      result = op::abs();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_negate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::UnaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":negate")) SWIG_fail;
  {
    try {
      result = op::negate();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bitwise_not(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::UnaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":bitwise_not")) SWIG_fail;
  {
    try {
      result = op::bitwise_not();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_logical_not(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::UnaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":logical_not")) SWIG_fail;
  {
    try {
      result = op::logical_not();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_totality(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::UnaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":totality")) SWIG_fail;
  {
    try {
      result = op::totality();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ifthenelse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::UnaryFunction *arg1 = 0 ;
  op::UnaryFunction *arg2 = 0 ;
  op::UnaryFunction *arg3 = 0 ;
  SwigValueWrapper<op::UnaryFunction > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ifthenelse",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ifthenelse" "', argument " "1"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ifthenelse" "', argument " "1"" of type '" "op::UnaryFunction &""'"); 
  }
  arg1 = reinterpret_cast< op::UnaryFunction * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ifthenelse" "', argument " "2"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ifthenelse" "', argument " "2"" of type '" "op::UnaryFunction &""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ifthenelse" "', argument " "3"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ifthenelse" "', argument " "3"" of type '" "op::UnaryFunction &""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunction * >(argp3);
  {
    try {
      result = op::ifthenelse(*arg1,*arg2,*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  SwigValueWrapper<op::UnaryFunction > result;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unary",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      result = op::unary(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BinaryFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = (op::BinaryFunction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BinaryFunction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BinaryFunction" "', argument " "1"" of type '" "op::BinaryFunction *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunction_commutable_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = (op::BinaryFunction *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BinaryFunction_commutable_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunction_commutable_set" "', argument " "1"" of type '" "op::BinaryFunction *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunction_commutable_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->commutable = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunction_commutable_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = (op::BinaryFunction *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BinaryFunction_commutable_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunction_commutable_get" "', argument " "1"" of type '" "op::BinaryFunction *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  result = (bool) ((arg1)->commutable);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunction_associative_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = (op::BinaryFunction *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BinaryFunction_associative_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunction_associative_set" "', argument " "1"" of type '" "op::BinaryFunction *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunction_associative_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->associative = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunction_associative_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = (op::BinaryFunction *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BinaryFunction_associative_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunction_associative_get" "', argument " "1"" of type '" "op::BinaryFunction *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  result = (bool) ((arg1)->associative);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunction___call__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = (op::BinaryFunction *) 0 ;
  doubleint *arg2 = 0 ;
  doubleint *arg3 = 0 ;
  doubleint result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunction___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunction___call__" "', argument " "1"" of type '" "op::BinaryFunction const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_doubleint,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunction___call__" "', argument " "2"" of type '" "doubleint const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunction___call__" "', argument " "2"" of type '" "doubleint const &""'"); 
  }
  arg2 = reinterpret_cast< doubleint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_doubleint,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunction___call__" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunction___call__" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  arg3 = reinterpret_cast< doubleint * >(argp3);
  {
    try {
      result = ((op::BinaryFunction const *)arg1)->operator ()((doubleint const &)*arg2,(doubleint const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new doubleint(static_cast< const doubleint& >(result))), SWIGTYPE_p_doubleint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BinaryFunction_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__BinaryFunction, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_plus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":plus")) SWIG_fail;
  {
    try {
      result = op::plus();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_minus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":minus")) SWIG_fail;
  {
    try {
      result = op::minus();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_multiplies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":multiplies")) SWIG_fail;
  {
    try {
      result = op::multiplies();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_divides(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":divides")) SWIG_fail;
  {
    try {
      result = op::divides();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_modulus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":modulus")) SWIG_fail;
  {
    try {
      result = op::modulus();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_fmod(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":fmod")) SWIG_fail;
  {
    try {
      result = op::fmod();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":pow")) SWIG_fail;
  {
    try {
      result = op::pow();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_max(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":max")) SWIG_fail;
  {
    try {
      result = op::max();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_min(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":min")) SWIG_fail;
  {
    try {
      result = op::min();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bitwise_and(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":bitwise_and")) SWIG_fail;
  {
    try {
      result = op::bitwise_and();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bitwise_or(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":bitwise_or")) SWIG_fail;
  {
    try {
      result = op::bitwise_or();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bitwise_xor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":bitwise_xor")) SWIG_fail;
  {
    try {
      result = op::bitwise_xor();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_logical_and(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":logical_and")) SWIG_fail;
  {
    try {
      result = op::logical_and();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_logical_or(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":logical_or")) SWIG_fail;
  {
    try {
      result = op::logical_or();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_logical_xor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":logical_xor")) SWIG_fail;
  {
    try {
      result = op::logical_xor();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_equal_to(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":equal_to")) SWIG_fail;
  {
    try {
      result = op::equal_to();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_not_equal_to(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":not_equal_to")) SWIG_fail;
  {
    try {
      result = op::not_equal_to();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_greater(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":greater")) SWIG_fail;
  {
    try {
      result = op::greater();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_less(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":less")) SWIG_fail;
  {
    try {
      result = op::less();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_greater_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":greater_equal")) SWIG_fail;
  {
    try {
      result = op::greater_equal();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_less_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::BinaryFunction > result;
  
  if (!PyArg_ParseTuple(args,(char *)":less_equal")) SWIG_fail;
  {
    try {
      result = op::less_equal();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  SwigValueWrapper<op::BinaryFunction > result;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binary",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      result = op::binary(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binaryPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  op::BinaryFunction *result = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binaryPtr",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      result = (op::BinaryFunction *)op::binaryPtr(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_op__BinaryFunction, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bind1st(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = 0 ;
  double arg2 ;
  SwigValueWrapper<op::UnaryFunction > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bind1st",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_op__BinaryFunction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bind1st" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bind1st" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bind1st" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = op::bind1st(*arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_bind2nd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = 0 ;
  double arg2 ;
  SwigValueWrapper<op::UnaryFunction > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:bind2nd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_op__BinaryFunction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "bind2nd" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "bind2nd" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "bind2nd" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      result = op::bind2nd(*arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_compose1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::UnaryFunction *arg1 = 0 ;
  op::UnaryFunction *arg2 = 0 ;
  SwigValueWrapper<op::UnaryFunction > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:compose1",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "compose1" "', argument " "1"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "compose1" "', argument " "1"" of type '" "op::UnaryFunction &""'"); 
  }
  arg1 = reinterpret_cast< op::UnaryFunction * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "compose1" "', argument " "2"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "compose1" "', argument " "2"" of type '" "op::UnaryFunction &""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  {
    try {
      result = op::compose1(*arg1,*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_compose2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = 0 ;
  op::UnaryFunction *arg2 = 0 ;
  op::UnaryFunction *arg3 = 0 ;
  SwigValueWrapper<op::UnaryFunction > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:compose2",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_op__BinaryFunction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "compose2" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "compose2" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "compose2" "', argument " "2"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "compose2" "', argument " "2"" of type '" "op::UnaryFunction &""'"); 
  }
  arg2 = reinterpret_cast< op::UnaryFunction * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "compose2" "', argument " "3"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "compose2" "', argument " "3"" of type '" "op::UnaryFunction &""'"); 
  }
  arg3 = reinterpret_cast< op::UnaryFunction * >(argp3);
  {
    try {
      result = op::compose2(*arg1,*arg2,*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_not1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::UnaryFunction *arg1 = 0 ;
  SwigValueWrapper<op::UnaryFunction > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:not1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_op__UnaryFunction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "not1" "', argument " "1"" of type '" "op::UnaryFunction &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "not1" "', argument " "1"" of type '" "op::UnaryFunction &""'"); 
  }
  arg1 = reinterpret_cast< op::UnaryFunction * >(argp1);
  {
    try {
      result = op::not1(*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunction(static_cast< const op::UnaryFunction& >(result))), SWIGTYPE_p_op__UnaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_not2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunction *arg1 = 0 ;
  SwigValueWrapper<op::BinaryFunction > result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:not2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_op__BinaryFunction,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "not2" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "not2" "', argument " "1"" of type '" "op::BinaryFunction &""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunction * >(argp1);
  {
    try {
      result = op::not2(*arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunction(static_cast< const op::BinaryFunction& >(result))), SWIGTYPE_p_op__BinaryFunction, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Semiring__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  op::Semiring *result = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Semiring",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  arg2 = obj1;
  {
    try {
      result = (op::Semiring *)new op::Semiring(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_op__Semiring, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Semiring(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      _v = (argv[1] != 0);
      if (_v) {
        return _wrap_new_Semiring__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_Semiring'.\n  Possible C/C++ prototypes are:\n    op::Semiring(PyObject *,PyObject *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Semiring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::Semiring *arg1 = (op::Semiring *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Semiring",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__Semiring, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Semiring" "', argument " "1"" of type '" "op::Semiring *""'"); 
  }
  arg1 = reinterpret_cast< op::Semiring * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Semiring_mpi_op(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::Semiring *arg1 = (op::Semiring *) 0 ;
  MPI_Op result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Semiring_mpi_op",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Semiring_mpi_op" "', argument " "1"" of type '" "op::Semiring *""'"); 
  }
  arg1 = reinterpret_cast< op::Semiring * >(argp1);
  {
    try {
      result = (arg1)->mpi_op();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new MPI_Op(static_cast< const MPI_Op& >(result))), SWIGTYPE_p_MPI_Op, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Semiring_add(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::Semiring *arg1 = (op::Semiring *) 0 ;
  doubleint *arg2 = 0 ;
  doubleint *arg3 = 0 ;
  doubleint result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Semiring_add",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Semiring_add" "', argument " "1"" of type '" "op::Semiring *""'"); 
  }
  arg1 = reinterpret_cast< op::Semiring * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_doubleint,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Semiring_add" "', argument " "2"" of type '" "doubleint const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Semiring_add" "', argument " "2"" of type '" "doubleint const &""'"); 
  }
  arg2 = reinterpret_cast< doubleint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_doubleint,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Semiring_add" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Semiring_add" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  arg3 = reinterpret_cast< doubleint * >(argp3);
  {
    try {
      result = (arg1)->add((doubleint const &)*arg2,(doubleint const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new doubleint(static_cast< const doubleint& >(result))), SWIGTYPE_p_doubleint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Semiring_multiply(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::Semiring *arg1 = (op::Semiring *) 0 ;
  doubleint *arg2 = 0 ;
  doubleint *arg3 = 0 ;
  doubleint result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Semiring_multiply",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Semiring_multiply" "', argument " "1"" of type '" "op::Semiring *""'"); 
  }
  arg1 = reinterpret_cast< op::Semiring * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_doubleint,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Semiring_multiply" "', argument " "2"" of type '" "doubleint const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Semiring_multiply" "', argument " "2"" of type '" "doubleint const &""'"); 
  }
  arg2 = reinterpret_cast< doubleint * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_doubleint,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Semiring_multiply" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Semiring_multiply" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  arg3 = reinterpret_cast< doubleint * >(argp3);
  {
    try {
      result = (arg1)->multiply((doubleint const &)*arg2,(doubleint const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new doubleint(static_cast< const doubleint& >(result))), SWIGTYPE_p_doubleint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Semiring_axpy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::Semiring *arg1 = (op::Semiring *) 0 ;
  doubleint arg2 ;
  doubleint *arg3 = 0 ;
  doubleint *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Semiring_axpy",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__Semiring, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Semiring_axpy" "', argument " "1"" of type '" "op::Semiring *""'"); 
  }
  arg1 = reinterpret_cast< op::Semiring * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_doubleint,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Semiring_axpy" "', argument " "2"" of type '" "doubleint""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Semiring_axpy" "', argument " "2"" of type '" "doubleint""'");
    } else {
      doubleint * temp = reinterpret_cast< doubleint * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_doubleint,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Semiring_axpy" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Semiring_axpy" "', argument " "3"" of type '" "doubleint const &""'"); 
  }
  arg3 = reinterpret_cast< doubleint * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_doubleint,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Semiring_axpy" "', argument " "4"" of type '" "doubleint &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Semiring_axpy" "', argument " "4"" of type '" "doubleint &""'"); 
  }
  arg4 = reinterpret_cast< doubleint * >(argp4);
  {
    try {
      (arg1)->axpy(arg2,(doubleint const &)*arg3,*arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Semiring_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__Semiring, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TimesPlusSemiring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::Semiring > result;
  
  if (!PyArg_ParseTuple(args,(char *)":TimesPlusSemiring")) SWIG_fail;
  {
    try {
      result = op::TimesPlusSemiring();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::Semiring(static_cast< const op::Semiring& >(result))), SWIGTYPE_p_op__Semiring, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SecondMaxSemiring(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  SwigValueWrapper<op::Semiring > result;
  
  if (!PyArg_ParseTuple(args,(char *)":SecondMaxSemiring")) SWIG_fail;
  {
    try {
      result = op::SecondMaxSemiring();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::Semiring(static_cast< const op::Semiring& >(result))), SWIGTYPE_p_op__Semiring, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1_weight_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj1_weight_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1_weight_set" "', argument " "1"" of type '" "Obj1 *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Obj1_weight_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->weight = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1_weight_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj1_weight_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1_weight_get" "', argument " "1"" of type '" "Obj1 *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  result = (double) ((arg1)->weight);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1_category_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj1_category_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1_category_set" "', argument " "1"" of type '" "Obj1 *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Obj1_category_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->category = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1_category_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj1_category_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1_category_get" "', argument " "1"" of type '" "Obj1 *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  result = (int) ((arg1)->category);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Obj1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Obj1")) SWIG_fail;
  {
    try {
      result = (Obj1 *)new Obj1();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Obj1, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj1___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1___repr__" "', argument " "1"" of type '" "Obj1 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  {
    try {
      result = (char *)((Obj1 const *)arg1)->__repr__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  Obj1 *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj1___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1___eq__" "', argument " "1"" of type '" "Obj1 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Obj1___eq__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Obj1___eq__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  {
    try {
      result = (bool)((Obj1 const *)arg1)->__eq__((Obj1 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  Obj1 *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj1___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1___ne__" "', argument " "1"" of type '" "Obj1 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Obj1___ne__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Obj1___ne__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  {
    try {
      result = (bool)((Obj1 const *)arg1)->__ne__((Obj1 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  Obj1 *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj1___lt__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1___lt__" "', argument " "1"" of type '" "Obj1 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Obj1___lt__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Obj1___lt__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  {
    try {
      result = (bool)((Obj1 const *)arg1)->__lt__((Obj1 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1_hasPassedFilter_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj1_hasPassedFilter_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1_hasPassedFilter_set" "', argument " "1"" of type '" "Obj1 *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Obj1_hasPassedFilter_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->hasPassedFilter = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj1_hasPassedFilter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj1_hasPassedFilter_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj1_hasPassedFilter_get" "', argument " "1"" of type '" "Obj1 *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  result = (bool) ((arg1)->hasPassedFilter);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Obj1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj1 *arg1 = (Obj1 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Obj1",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj1, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Obj1" "', argument " "1"" of type '" "Obj1 *""'"); 
  }
  arg1 = reinterpret_cast< Obj1 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Obj1_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Obj1, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Obj2_weight_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj2_weight_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2_weight_set" "', argument " "1"" of type '" "Obj2 *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Obj2_weight_set" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  if (arg1) (arg1)->weight = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2_weight_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj2_weight_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2_weight_get" "', argument " "1"" of type '" "Obj2 *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  result = (double) ((arg1)->weight);
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2_category_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj2_category_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2_category_set" "', argument " "1"" of type '" "Obj2 *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Obj2_category_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->category = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2_category_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj2_category_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2_category_get" "', argument " "1"" of type '" "Obj2 *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  result = (int) ((arg1)->category);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Obj2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Obj2")) SWIG_fail;
  {
    try {
      result = (Obj2 *)new Obj2();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_Obj2, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2___repr__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj2___repr__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2___repr__" "', argument " "1"" of type '" "Obj2 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  {
    try {
      result = (char *)((Obj2 const *)arg1)->__repr__();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  Obj2 *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj2___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2___eq__" "', argument " "1"" of type '" "Obj2 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Obj2___eq__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Obj2___eq__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  {
    try {
      result = (bool)((Obj2 const *)arg1)->__eq__((Obj2 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  Obj2 *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj2___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2___ne__" "', argument " "1"" of type '" "Obj2 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Obj2___ne__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Obj2___ne__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  {
    try {
      result = (bool)((Obj2 const *)arg1)->__ne__((Obj2 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  Obj2 *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj2___lt__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2___lt__" "', argument " "1"" of type '" "Obj2 const *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Obj2___lt__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Obj2___lt__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  {
    try {
      result = (bool)((Obj2 const *)arg1)->__lt__((Obj2 const &)*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2_hasPassedFilter_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Obj2_hasPassedFilter_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2_hasPassedFilter_set" "', argument " "1"" of type '" "Obj2 *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Obj2_hasPassedFilter_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->hasPassedFilter = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Obj2_hasPassedFilter_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Obj2_hasPassedFilter_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Obj2_hasPassedFilter_get" "', argument " "1"" of type '" "Obj2 *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  result = (bool) ((arg1)->hasPassedFilter);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Obj2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Obj2 *arg1 = (Obj2 *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Obj2",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_Obj2, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Obj2" "', argument " "1"" of type '" "Obj2 *""'"); 
  }
  arg1 = reinterpret_cast< Obj2 * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Obj2_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_Obj2, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_UnaryPredicateObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::UnaryPredicateObj *arg1 = (op::UnaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UnaryPredicateObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__UnaryPredicateObj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UnaryPredicateObj" "', argument " "1"" of type '" "op::UnaryPredicateObj *""'"); 
  }
  arg1 = reinterpret_cast< op::UnaryPredicateObj * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UnaryPredicateObj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__UnaryPredicateObj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_UnaryFunctionObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::UnaryFunctionObj *arg1 = (op::UnaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UnaryFunctionObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__UnaryFunctionObj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UnaryFunctionObj" "', argument " "1"" of type '" "op::UnaryFunctionObj *""'"); 
  }
  arg1 = reinterpret_cast< op::UnaryFunctionObj * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UnaryFunctionObj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__UnaryFunctionObj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_unaryObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  SwigValueWrapper<op::UnaryFunctionObj > result;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unaryObj",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      result = op::unaryObj(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryFunctionObj(static_cast< const op::UnaryFunctionObj& >(result))), SWIGTYPE_p_op__UnaryFunctionObj, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_unaryObjPred(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  SwigValueWrapper<op::UnaryPredicateObj > result;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:unaryObjPred",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      result = op::unaryObjPred(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::UnaryPredicateObj(static_cast< const op::UnaryPredicateObj& >(result))), SWIGTYPE_p_op__UnaryPredicateObj, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BinaryFunctionObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BinaryFunctionObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BinaryFunctionObj" "', argument " "1"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_commutable_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BinaryFunctionObj_commutable_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_commutable_set" "', argument " "1"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj_commutable_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->commutable = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_commutable_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BinaryFunctionObj_commutable_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_commutable_get" "', argument " "1"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  result = (bool) ((arg1)->commutable);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_associative_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BinaryFunctionObj_associative_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_associative_set" "', argument " "1"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj_associative_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->associative = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_associative_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BinaryFunctionObj_associative_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_associative_get" "', argument " "1"" of type '" "op::BinaryFunctionObj *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  result = (bool) ((arg1)->associative);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj1 *arg2 = 0 ;
  Obj1 *arg3 = 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->operator ()((Obj1 const &)*arg2,(Obj1 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj2 *arg2 = 0 ;
  Obj2 *arg3 = 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->operator ()((Obj2 const &)*arg2,(Obj2 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj1 *arg2 = 0 ;
  Obj2 *arg3 = 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->operator ()((Obj1 const &)*arg2,(Obj2 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj2 *arg2 = 0 ;
  Obj1 *arg3 = 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->operator ()((Obj2 const &)*arg2,(Obj1 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj1 *arg2 = 0 ;
  double *arg3 = 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->operator ()((Obj1 const &)*arg2,(double const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj2 *arg2 = 0 ;
  double *arg3 = 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->operator ()((Obj2 const &)*arg2,(double const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  double *arg2 = 0 ;
  Obj1 *arg3 = 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      result = (double)((op::BinaryFunctionObj const *)arg1)->operator ()((double const &)*arg2,(Obj1 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  double *arg2 = 0 ;
  Obj2 *arg3 = 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      result = (double)((op::BinaryFunctionObj const *)arg1)->operator ()((double const &)*arg2,(Obj2 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call____SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  double *arg2 = 0 ;
  double *arg3 = 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj___call__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj___call__" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj___call__" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BinaryFunctionObj___call__" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  {
    try {
      result = (double)((op::BinaryFunctionObj const *)arg1)->operator ()((double const &)*arg2,(double const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj___call__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BinaryFunctionObj___call____SWIG_8(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'BinaryFunctionObj___call__'.\n  Possible C/C++ prototypes are:\n    operator ()(Obj1 const &,Obj1 const &)\n    operator ()(Obj2 const &,Obj2 const &)\n    operator ()(Obj1 const &,Obj2 const &)\n    operator ()(Obj2 const &,Obj1 const &)\n    operator ()(Obj1 const &,double const &)\n    operator ()(Obj2 const &,double const &)\n    operator ()(double const &,Obj1 const &)\n    operator ()(double const &,Obj2 const &)\n    operator ()(double const &,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj1 *arg2 = 0 ;
  Obj1 *arg3 = 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((Obj1 const &)*arg2,(Obj1 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj2 *arg2 = 0 ;
  Obj2 *arg3 = 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((Obj2 const &)*arg2,(Obj2 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj2 *arg2 = 0 ;
  Obj1 *arg3 = 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((Obj2 const &)*arg2,(Obj1 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj1 *arg2 = 0 ;
  Obj2 *arg3 = 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((Obj1 const &)*arg2,(Obj2 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj1 *arg2 = 0 ;
  double *arg3 = 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj1 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj1 * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  {
    try {
      result = (double)((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((Obj1 const &)*arg2,(double const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  Obj2 *arg2 = 0 ;
  double *arg3 = 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "Obj2 const &""'"); 
  }
  arg2 = reinterpret_cast< Obj2 * >(argp2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  {
    try {
      result = (double)((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((Obj2 const &)*arg2,(double const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  double *arg2 = 0 ;
  Obj1 *arg3 = 0 ;
  Obj1 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj1,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj1 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj1 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((double const &)*arg2,(Obj1 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj1(static_cast< const Obj1& >(result))), SWIGTYPE_p_Obj1, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  double *arg2 = 0 ;
  Obj2 *arg3 = 0 ;
  Obj2 result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_Obj2,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "Obj2 const &""'"); 
  }
  arg3 = reinterpret_cast< Obj2 * >(argp3);
  {
    try {
      result = ((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((double const &)*arg2,(Obj2 const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new Obj2(static_cast< const Obj2& >(result))), SWIGTYPE_p_Obj2, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryFunctionObj *arg1 = (op::BinaryFunctionObj *) 0 ;
  double *arg2 = 0 ;
  double *arg3 = 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double temp2 ;
  double val2 ;
  int ecode2 = 0 ;
  double temp3 ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BinaryFunctionObj_rettype2nd_call",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryFunctionObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "1"" of type '" "op::BinaryFunctionObj const *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryFunctionObj * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "2"" of type '" "double""'");
  } 
  temp2 = static_cast< double >(val2);
  arg2 = &temp2;
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BinaryFunctionObj_rettype2nd_call" "', argument " "3"" of type '" "double""'");
  } 
  temp3 = static_cast< double >(val3);
  arg3 = &temp3;
  {
    try {
      result = (double)((op::BinaryFunctionObj const *)arg1)->rettype2nd_call((double const &)*arg2,(double const &)*arg3);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BinaryFunctionObj_rettype2nd_call(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_3(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj1, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_4(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_Obj2, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_5(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj1, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_6(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_Obj2, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_7(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_op__BinaryFunctionObj, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BinaryFunctionObj_rettype2nd_call__SWIG_8(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'BinaryFunctionObj_rettype2nd_call'.\n  Possible C/C++ prototypes are:\n    rettype2nd_call(Obj1 const &,Obj1 const &)\n    rettype2nd_call(Obj2 const &,Obj2 const &)\n    rettype2nd_call(Obj2 const &,Obj1 const &)\n    rettype2nd_call(Obj1 const &,Obj2 const &)\n    rettype2nd_call(Obj1 const &,double const &)\n    rettype2nd_call(Obj2 const &,double const &)\n    rettype2nd_call(double const &,Obj1 const &)\n    rettype2nd_call(double const &,Obj2 const &)\n    rettype2nd_call(double const &,double const &)\n");
  return NULL;
}


SWIGINTERN PyObject *BinaryFunctionObj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__BinaryFunctionObj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_BinaryPredicateObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::BinaryPredicateObj *arg1 = (op::BinaryPredicateObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BinaryPredicateObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__BinaryPredicateObj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BinaryPredicateObj" "', argument " "1"" of type '" "op::BinaryPredicateObj *""'"); 
  }
  arg1 = reinterpret_cast< op::BinaryPredicateObj * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BinaryPredicateObj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__BinaryPredicateObj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_binaryObj__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  bool arg2 ;
  SwigValueWrapper<op::BinaryFunctionObj > result;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:binaryObj",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "binaryObj" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      result = op::binaryObj(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunctionObj(static_cast< const op::BinaryFunctionObj& >(result))), SWIGTYPE_p_op__BinaryFunctionObj, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binaryObj__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  SwigValueWrapper<op::BinaryFunctionObj > result;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binaryObj",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      result = op::binaryObj(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryFunctionObj(static_cast< const op::BinaryFunctionObj& >(result))), SWIGTYPE_p_op__BinaryFunctionObj, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_binaryObj(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      return _wrap_binaryObj__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_binaryObj__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'binaryObj'.\n  Possible C/C++ prototypes are:\n    op::binaryObj(PyObject *,bool)\n    op::binaryObj(PyObject *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_binaryObjPred(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  SwigValueWrapper<op::BinaryPredicateObj > result;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:binaryObjPred",&obj0)) SWIG_fail;
  arg1 = obj0;
  {
    try {
      result = op::binaryObjPred(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new op::BinaryPredicateObj(static_cast< const op::BinaryPredicateObj& >(result))), SWIGTYPE_p_op__BinaryPredicateObj, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SemiringObj__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  op::SemiringObj *result = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SemiringObj",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  arg2 = obj1;
  {
    try {
      result = (op::SemiringObj *)new op::SemiringObj(arg1,arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_op__SemiringObj, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SemiringObj(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      _v = (argv[1] != 0);
      if (_v) {
        return _wrap_new_SemiringObj__SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'new_SemiringObj'.\n  Possible C/C++ prototypes are:\n    op::SemiringObj(PyObject *,PyObject *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SemiringObj(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::SemiringObj *arg1 = (op::SemiringObj *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SemiringObj",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__SemiringObj, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SemiringObj" "', argument " "1"" of type '" "op::SemiringObj *""'"); 
  }
  arg1 = reinterpret_cast< op::SemiringObj * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SemiringObj_mpi_op(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  op::SemiringObj *arg1 = (op::SemiringObj *) 0 ;
  MPI_Op result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SemiringObj_mpi_op",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_op__SemiringObj, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SemiringObj_mpi_op" "', argument " "1"" of type '" "op::SemiringObj *""'"); 
  }
  arg1 = reinterpret_cast< op::SemiringObj * >(argp1);
  {
    try {
      result = (arg1)->mpi_op();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new MPI_Op(static_cast< const MPI_Op& >(result))), SWIGTYPE_p_MPI_Op, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SemiringObj_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_op__SemiringObj, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_finalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!PyArg_ParseTuple(args,(char *)":finalize")) SWIG_fail;
  {
    try {
      finalize();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_root(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)":root")) SWIG_fail;
  {
    try {
      result = (bool)root();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__nprocs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)":_nprocs")) SWIG_fail;
  {
    try {
      result = (int)_nprocs();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_testFunc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  double (*arg1)(double) = (double (*)(double)) 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:testFunc",&obj0)) SWIG_fail;
  {
    int res = SWIG_ConvertFunctionPtr(obj0, (void**)(&arg1), SWIGTYPE_p_f_double__double);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "testFunc" "', argument " "1"" of type '" "double (*)(double)""'"); 
    }
  }
  {
    try {
      testFunc(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EWiseArg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  EWiseArg *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_EWiseArg")) SWIG_fail;
  {
    try {
      result = (EWiseArg *)new EWiseArg();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_EWiseArg, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_EWiseArg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  EWiseArg *arg1 = (EWiseArg *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_EWiseArg",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_EWiseArg, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EWiseArg" "', argument " "1"" of type '" "EWiseArg *""'"); 
  }
  arg1 = reinterpret_cast< EWiseArg * >(argp1);
  {
    try {
      delete arg1;
      
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *EWiseArg_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O|swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_EWiseArg, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EWise_Index(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  EWiseArg result;
  
  if (!PyArg_ParseTuple(args,(char *)":EWise_Index")) SWIG_fail;
  {
    try {
      result = EWise_Index();
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new EWiseArg(static_cast< const EWiseArg& >(result))), SWIGTYPE_p_EWiseArg, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWise_OnlyNZ__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = (pySpParVec *) 0 ;
  EWiseArg result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EWise_OnlyNZ",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pySpParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWise_OnlyNZ" "', argument " "1"" of type '" "pySpParVec *""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  {
    try {
      result = EWise_OnlyNZ(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new EWiseArg(static_cast< const EWiseArg& >(result))), SWIGTYPE_p_EWiseArg, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWise_OnlyNZ__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pyDenseParVec *arg1 = (pyDenseParVec *) 0 ;
  EWiseArg result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EWise_OnlyNZ",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pyDenseParVec, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EWise_OnlyNZ" "', argument " "1"" of type '" "pyDenseParVec *""'"); 
  }
  arg1 = reinterpret_cast< pyDenseParVec * >(argp1);
  {
    try {
      result = EWise_OnlyNZ(arg1);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_NewPointerObj((new EWiseArg(static_cast< const EWiseArg& >(result))), SWIGTYPE_p_EWiseArg, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWise_OnlyNZ(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 1); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pySpParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EWise_OnlyNZ__SWIG_0(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pyDenseParVec, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_EWise_OnlyNZ__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'EWise_OnlyNZ'.\n  Possible C/C++ prototypes are:\n    EWise_OnlyNZ(pySpParVec *)\n    EWise_OnlyNZ(pyDenseParVec *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_EWise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  int arg2 ;
  EWiseArgDescriptor *arg3 = (EWiseArgDescriptor *) 0 ;
  PyObject *arg4 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EWise",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  {
    /* Check if is a list */
    if (PyList_Check(obj1)) {
      int size = PyList_Size(obj1);
      int i = 0;
      
      arg2 = size;
      arg3 = new EWiseArgDescriptor[size];
      arg4 = obj1;
      
      pyDenseParVec* dptr;
      pySpParVec* sptr;
      EWiseArg* argptr;
      for (i = 0; i < size; i++)
      {
        PyObject *o = PyList_GetItem(obj1,i);
        if (SWIG_IsOK(SWIG_ConvertPtr(o, (void**)&dptr, SWIGTYPE_p_pyDenseParVec, 0)))
        {
          arg3[i].type = EWiseArgDescriptor::ITERATOR;
          arg3[i].onlyNZ = false;
          arg3[i].iter = new DenseVectorLocalIterator<int64_t, doubleint>(dptr->v);
        }
        else if (SWIG_IsOK(SWIG_ConvertPtr(o, (void**)&sptr, SWIGTYPE_p_pySpParVec, 0)))
        {
          arg3[i].type = EWiseArgDescriptor::ITERATOR;
          arg3[i].onlyNZ = false;
          arg3[i].iter = new SparseVectorLocalIterator<int64_t, doubleint>(sptr->v);
        }
        else if (SWIG_IsOK(SWIG_ConvertPtr(o, (void**)&argptr, SWIGTYPE_p_EWiseArg, 0)))
        {
          switch (argptr->type)
          {
          case EWiseArg::GLOBAL_INDEX:
            arg3[i].type = EWiseArgDescriptor::GLOBAL_INDEX;
            break;
          case EWiseArg::DENSE:
            arg3[i].type = EWiseArgDescriptor::ITERATOR;
            arg3[i].onlyNZ = false;
            arg3[i].iter = new DenseVectorLocalIterator<int64_t, doubleint>(argptr->dptr->v);
            break;
          case EWiseArg::SPARSE:
            arg3[i].type = EWiseArgDescriptor::ITERATOR;
            arg3[i].onlyNZ = false;
            arg3[i].iter = new SparseVectorLocalIterator<int64_t, doubleint>(argptr->sptr->v);
            break;
          case EWiseArg::SPARSE_NZ:
            arg3[i].type = EWiseArgDescriptor::ITERATOR;
            arg3[i].onlyNZ = true;
            arg3[i].iter = new SparseVectorLocalIterator<int64_t, doubleint>(argptr->sptr->v);
            break;
          default:
            cout << "AAAHHH! What are you passing to EWise()?" << endl;
            break;
          }
        }
        else
        {
          // python object
          arg3[i].type = EWiseArgDescriptor::PYTHON_OBJ;
        }
      }
      
    } else {
      PyErr_SetString(PyExc_TypeError,"not a list");
      return NULL;
    }
  }
  {
    try {
      EWise(arg1,arg2,arg3,arg4);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  {
    delete [] arg3;
  }
  return resultobj;
fail:
  {
    delete [] arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_Graph500VectorOps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pySpParVec *arg1 = 0 ;
  pyDenseParVec *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Graph500VectorOps",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pySpParVec,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Graph500VectorOps" "', argument " "1"" of type '" "pySpParVec &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Graph500VectorOps" "', argument " "1"" of type '" "pySpParVec &""'"); 
  }
  arg1 = reinterpret_cast< pySpParVec * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pyDenseParVec,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Graph500VectorOps" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Graph500VectorOps" "', argument " "2"" of type '" "pyDenseParVec &""'"); 
  }
  arg2 = reinterpret_cast< pyDenseParVec * >(argp2);
  {
    try {
      Graph500VectorOps(*arg1,*arg2);
    } catch(string& stringReason) {
      const char* sData = (char*)stringReason.c_str();
      SWIG_exception(SWIG_RuntimeError,sData);
      SWIG_exception(SWIG_IndexError,sData);
    } catch(...) {
      SWIG_exception(SWIG_RuntimeError,"Unknown exception");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"new_pySpParMat", _wrap_new_pySpParMat, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_getnnz", _wrap_pySpParMat_getnnz, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_getnee", _wrap_pySpParMat_getnee, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_getnrow", _wrap_pySpParMat_getnrow, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_getncol", _wrap_pySpParMat_getncol, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_load", _wrap_pySpParMat_load, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_save", _wrap_pySpParMat_save, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_GenGraph500Edges", _wrap_pySpParMat_GenGraph500Edges, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_copy", _wrap_pySpParMat_copy, METH_VARARGS, NULL},
	 { (char *)"pySpParMat___iadd__", _wrap_pySpParMat___iadd__, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_assign", _wrap_pySpParMat_assign, METH_VARARGS, NULL},
	 { (char *)"pySpParMat___mul__", _wrap_pySpParMat___mul__, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_SubsRef", _wrap_pySpParMat_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pySpParMat___getitem__", _wrap_pySpParMat___getitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_removeSelfLoops", _wrap_pySpParMat_removeSelfLoops, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Apply", _wrap_pySpParMat_Apply, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_DimWiseApply", _wrap_pySpParMat_DimWiseApply, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Prune", _wrap_pySpParMat_Prune, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Count", _wrap_pySpParMat_Count, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Reduce", _wrap_pySpParMat_Reduce, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Transpose", _wrap_pySpParMat_Transpose, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Find", _wrap_pySpParMat_Find, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_SpMV", _wrap_pySpParMat_SpMV, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_SpMV_inplace", _wrap_pySpParMat_SpMV_inplace, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Square", _wrap_pySpParMat_Square, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_SpGEMM", _wrap_pySpParMat_SpGEMM, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Column", _wrap_pySpParMat_Column, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_Row", _wrap_pySpParMat_Row, METH_VARARGS, NULL},
	 { (char *)"delete_pySpParMat", _wrap_delete_pySpParMat, METH_VARARGS, NULL},
	 { (char *)"pySpParMat_swigregister", pySpParMat_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pySpParMatBool", _wrap_new_pySpParMatBool, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_getnnz", _wrap_pySpParMatBool_getnnz, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_getnee", _wrap_pySpParMatBool_getnee, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_getnrow", _wrap_pySpParMatBool_getnrow, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_getncol", _wrap_pySpParMatBool_getncol, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_load", _wrap_pySpParMatBool_load, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_save", _wrap_pySpParMatBool_save, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_GenGraph500Edges", _wrap_pySpParMatBool_GenGraph500Edges, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_copy", _wrap_pySpParMatBool_copy, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool___iadd__", _wrap_pySpParMatBool___iadd__, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_assign", _wrap_pySpParMatBool_assign, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_SpGEMM", _wrap_pySpParMatBool_SpGEMM, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool___mul__", _wrap_pySpParMatBool___mul__, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_SubsRef", _wrap_pySpParMatBool_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool___getitem__", _wrap_pySpParMatBool___getitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_removeSelfLoops", _wrap_pySpParMatBool_removeSelfLoops, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Apply", _wrap_pySpParMatBool_Apply, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Prune", _wrap_pySpParMatBool_Prune, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Count", _wrap_pySpParMatBool_Count, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Reduce", _wrap_pySpParMatBool_Reduce, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Transpose", _wrap_pySpParMatBool_Transpose, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Find", _wrap_pySpParMatBool_Find, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_SpMV", _wrap_pySpParMatBool_SpMV, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_SpMV_inplace", _wrap_pySpParMatBool_SpMV_inplace, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Square", _wrap_pySpParMatBool_Square, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Column", _wrap_pySpParMatBool_Column, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_Row", _wrap_pySpParMatBool_Row, METH_VARARGS, NULL},
	 { (char *)"delete_pySpParMatBool", _wrap_delete_pySpParMatBool, METH_VARARGS, NULL},
	 { (char *)"pySpParMatBool_swigregister", pySpParMatBool_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pySpParMatObj1", _wrap_new_pySpParMatObj1, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_getnee", _wrap_pySpParMatObj1_getnee, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_getnrow", _wrap_pySpParMatObj1_getnrow, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_getncol", _wrap_pySpParMatObj1_getncol, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_load", _wrap_pySpParMatObj1_load, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_save", _wrap_pySpParMatObj1_save, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_copy", _wrap_pySpParMatObj1_copy, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_assign", _wrap_pySpParMatObj1_assign, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_SpGEMM", _wrap_pySpParMatObj1_SpGEMM, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_SubsRef", _wrap_pySpParMatObj1_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1___getitem__", _wrap_pySpParMatObj1___getitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_removeSelfLoops", _wrap_pySpParMatObj1_removeSelfLoops, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Apply", _wrap_pySpParMatObj1_Apply, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_DimWiseApply", _wrap_pySpParMatObj1_DimWiseApply, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Prune", _wrap_pySpParMatObj1_Prune, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Count", _wrap_pySpParMatObj1_Count, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Reduce", _wrap_pySpParMatObj1_Reduce, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Transpose", _wrap_pySpParMatObj1_Transpose, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Find", _wrap_pySpParMatObj1_Find, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_SpMV", _wrap_pySpParMatObj1_SpMV, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Square", _wrap_pySpParMatObj1_Square, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Column", _wrap_pySpParMatObj1_Column, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_Row", _wrap_pySpParMatObj1_Row, METH_VARARGS, NULL},
	 { (char *)"delete_pySpParMatObj1", _wrap_delete_pySpParMatObj1, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj1_swigregister", pySpParMatObj1_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pySpParMatObj2", _wrap_new_pySpParMatObj2, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_getnee", _wrap_pySpParMatObj2_getnee, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_getnrow", _wrap_pySpParMatObj2_getnrow, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_getncol", _wrap_pySpParMatObj2_getncol, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_load", _wrap_pySpParMatObj2_load, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_save", _wrap_pySpParMatObj2_save, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_copy", _wrap_pySpParMatObj2_copy, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_assign", _wrap_pySpParMatObj2_assign, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_SpGEMM", _wrap_pySpParMatObj2_SpGEMM, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_SubsRef", _wrap_pySpParMatObj2_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2___getitem__", _wrap_pySpParMatObj2___getitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_removeSelfLoops", _wrap_pySpParMatObj2_removeSelfLoops, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Apply", _wrap_pySpParMatObj2_Apply, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_DimWiseApply", _wrap_pySpParMatObj2_DimWiseApply, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Prune", _wrap_pySpParMatObj2_Prune, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Count", _wrap_pySpParMatObj2_Count, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Reduce", _wrap_pySpParMatObj2_Reduce, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Transpose", _wrap_pySpParMatObj2_Transpose, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Find", _wrap_pySpParMatObj2_Find, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_SpMV", _wrap_pySpParMatObj2_SpMV, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Square", _wrap_pySpParMatObj2_Square, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Column", _wrap_pySpParMatObj2_Column, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_Row", _wrap_pySpParMatObj2_Row, METH_VARARGS, NULL},
	 { (char *)"delete_pySpParMatObj2", _wrap_delete_pySpParMatObj2, METH_VARARGS, NULL},
	 { (char *)"pySpParMatObj2_swigregister", pySpParMatObj2_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pySpParVec", _wrap_new_pySpParVec, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_dense", _wrap_pySpParVec_dense, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_getnee", _wrap_pySpParVec_getnee, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_getnnz", _wrap_pySpParVec_getnnz, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___len__", _wrap_pySpParVec___len__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_len", _wrap_pySpParVec_len, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___add__", _wrap_pySpParVec___add__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___sub__", _wrap_pySpParVec___sub__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___iadd__", _wrap_pySpParVec___iadd__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___isub__", _wrap_pySpParVec___isub__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_copy", _wrap_pySpParVec_copy, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_any", _wrap_pySpParVec_any, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_all", _wrap_pySpParVec_all, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_intersectSize", _wrap_pySpParVec_intersectSize, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_printall", _wrap_pySpParVec_printall, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_load", _wrap_pySpParVec_load, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_save", _wrap_pySpParVec_save, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_Count", _wrap_pySpParVec_Count, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_Apply", _wrap_pySpParVec_Apply, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_ApplyInd", _wrap_pySpParVec_ApplyInd, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_SubsRef", _wrap_pySpParVec_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_Reduce", _wrap_pySpParVec_Reduce, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_Sort", _wrap_pySpParVec_Sort, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_TopK", _wrap_pySpParVec_TopK, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_setNumToInd", _wrap_pySpParVec_setNumToInd, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_zeros", _wrap_pySpParVec_zeros, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_range", _wrap_pySpParVec_range, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_abs", _wrap_pySpParVec_abs, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___delitem__", _wrap_pySpParVec___delitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___getitem__", _wrap_pySpParVec___getitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___setitem__", _wrap_pySpParVec___setitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVec___repr__", _wrap_pySpParVec___repr__, METH_VARARGS, NULL},
	 { (char *)"delete_pySpParVec", _wrap_delete_pySpParVec, METH_VARARGS, NULL},
	 { (char *)"pySpParVec_swigregister", pySpParVec_swigregister, METH_VARARGS, NULL},
	 { (char *)"EWiseMult", _wrap_EWiseMult, METH_VARARGS, NULL},
	 { (char *)"EWiseMult_inplacefirst", _wrap_EWiseMult_inplacefirst, METH_VARARGS, NULL},
	 { (char *)"new_pySpParVecObj1", _wrap_new_pySpParVecObj1, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_dense", _wrap_pySpParVecObj1_dense, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_getnee", _wrap_pySpParVecObj1_getnee, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1___len__", _wrap_pySpParVecObj1___len__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_len", _wrap_pySpParVecObj1_len, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_copy", _wrap_pySpParVecObj1_copy, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_any", _wrap_pySpParVecObj1_any, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_all", _wrap_pySpParVecObj1_all, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_intersectSize", _wrap_pySpParVecObj1_intersectSize, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_printall", _wrap_pySpParVecObj1_printall, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_load", _wrap_pySpParVecObj1_load, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_save", _wrap_pySpParVecObj1_save, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_Count", _wrap_pySpParVecObj1_Count, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_Apply", _wrap_pySpParVecObj1_Apply, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_ApplyInd", _wrap_pySpParVecObj1_ApplyInd, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_SubsRef", _wrap_pySpParVecObj1_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_Reduce", _wrap_pySpParVecObj1_Reduce, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_Sort", _wrap_pySpParVecObj1_Sort, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_TopK", _wrap_pySpParVecObj1_TopK, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1___delitem__", _wrap_pySpParVecObj1___delitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1___getitem__", _wrap_pySpParVecObj1___getitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1___setitem__", _wrap_pySpParVecObj1___setitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1___repr__", _wrap_pySpParVecObj1___repr__, METH_VARARGS, NULL},
	 { (char *)"delete_pySpParVecObj1", _wrap_delete_pySpParVecObj1, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj1_swigregister", pySpParVecObj1_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pySpParVecObj2", _wrap_new_pySpParVecObj2, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_dense", _wrap_pySpParVecObj2_dense, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_getnee", _wrap_pySpParVecObj2_getnee, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2___len__", _wrap_pySpParVecObj2___len__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_len", _wrap_pySpParVecObj2_len, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_copy", _wrap_pySpParVecObj2_copy, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_any", _wrap_pySpParVecObj2_any, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_all", _wrap_pySpParVecObj2_all, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_intersectSize", _wrap_pySpParVecObj2_intersectSize, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_printall", _wrap_pySpParVecObj2_printall, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_load", _wrap_pySpParVecObj2_load, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_save", _wrap_pySpParVecObj2_save, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_Count", _wrap_pySpParVecObj2_Count, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_Apply", _wrap_pySpParVecObj2_Apply, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_ApplyInd", _wrap_pySpParVecObj2_ApplyInd, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_SubsRef", _wrap_pySpParVecObj2_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_Reduce", _wrap_pySpParVecObj2_Reduce, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_Sort", _wrap_pySpParVecObj2_Sort, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_TopK", _wrap_pySpParVecObj2_TopK, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2___delitem__", _wrap_pySpParVecObj2___delitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2___getitem__", _wrap_pySpParVecObj2___getitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2___setitem__", _wrap_pySpParVecObj2___setitem__, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2___repr__", _wrap_pySpParVecObj2___repr__, METH_VARARGS, NULL},
	 { (char *)"delete_pySpParVecObj2", _wrap_delete_pySpParVecObj2, METH_VARARGS, NULL},
	 { (char *)"pySpParVecObj2_swigregister", pySpParVecObj2_swigregister, METH_VARARGS, NULL},
	 { (char *)"EWiseApply", _wrap_EWiseApply, METH_VARARGS, NULL},
	 { (char *)"new_pyDenseParVec", _wrap_new_pyDenseParVec, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_sparse", _wrap_pyDenseParVec_sparse, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_len", _wrap_pyDenseParVec_len, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___len__", _wrap_pyDenseParVec___len__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_add", _wrap_pyDenseParVec_add, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___imul__", _wrap_pyDenseParVec___imul__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___mul__", _wrap_pyDenseParVec___mul__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___eq__", _wrap_pyDenseParVec___eq__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___ne__", _wrap_pyDenseParVec___ne__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_copy", _wrap_pyDenseParVec_copy, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_SubsRef", _wrap_pyDenseParVec_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_RandPerm", _wrap_pyDenseParVec_RandPerm, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_Sort", _wrap_pyDenseParVec_Sort, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_TopK", _wrap_pyDenseParVec_TopK, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_printall", _wrap_pyDenseParVec_printall, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_getnee", _wrap_pyDenseParVec_getnee, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_getnnz", _wrap_pyDenseParVec_getnnz, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_getnz", _wrap_pyDenseParVec_getnz, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_any", _wrap_pyDenseParVec_any, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_load", _wrap_pyDenseParVec_load, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_save", _wrap_pyDenseParVec_save, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_Count", _wrap_pyDenseParVec_Count, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_Reduce", _wrap_pyDenseParVec_Reduce, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_Find", _wrap_pyDenseParVec_Find, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_FindInds", _wrap_pyDenseParVec_FindInds, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_Apply", _wrap_pyDenseParVec_Apply, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_ApplyMasked", _wrap_pyDenseParVec_ApplyMasked, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_EWiseApply", _wrap_pyDenseParVec_EWiseApply, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_range", _wrap_pyDenseParVec_range, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_abs", _wrap_pyDenseParVec_abs, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___iadd__", _wrap_pyDenseParVec___iadd__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___add__", _wrap_pyDenseParVec___add__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___isub__", _wrap_pyDenseParVec___isub__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___sub__", _wrap_pyDenseParVec___sub__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___and__", _wrap_pyDenseParVec___and__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___getitem__", _wrap_pyDenseParVec___getitem__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec___setitem__", _wrap_pyDenseParVec___setitem__, METH_VARARGS, NULL},
	 { (char *)"delete_pyDenseParVec", _wrap_delete_pyDenseParVec, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVec_swigregister", pyDenseParVec_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pyDenseParVecObj1", _wrap_new_pyDenseParVecObj1, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_sparse", _wrap_pyDenseParVecObj1_sparse, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_len", _wrap_pyDenseParVecObj1_len, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1___len__", _wrap_pyDenseParVecObj1___len__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_copy", _wrap_pyDenseParVecObj1_copy, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_SubsRef", _wrap_pyDenseParVecObj1_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_RandPerm", _wrap_pyDenseParVecObj1_RandPerm, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_Sort", _wrap_pyDenseParVecObj1_Sort, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_TopK", _wrap_pyDenseParVecObj1_TopK, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_printall", _wrap_pyDenseParVecObj1_printall, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_getnee", _wrap_pyDenseParVecObj1_getnee, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_load", _wrap_pyDenseParVecObj1_load, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_save", _wrap_pyDenseParVecObj1_save, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_Count", _wrap_pyDenseParVecObj1_Count, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_Reduce", _wrap_pyDenseParVecObj1_Reduce, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_Find", _wrap_pyDenseParVecObj1_Find, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_FindInds", _wrap_pyDenseParVecObj1_FindInds, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_Apply", _wrap_pyDenseParVecObj1_Apply, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_ApplyMasked", _wrap_pyDenseParVecObj1_ApplyMasked, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_EWiseApply", _wrap_pyDenseParVecObj1_EWiseApply, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1___getitem__", _wrap_pyDenseParVecObj1___getitem__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1___setitem__", _wrap_pyDenseParVecObj1___setitem__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1___repr__", _wrap_pyDenseParVecObj1___repr__, METH_VARARGS, NULL},
	 { (char *)"delete_pyDenseParVecObj1", _wrap_delete_pyDenseParVecObj1, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj1_swigregister", pyDenseParVecObj1_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_pyDenseParVecObj2", _wrap_new_pyDenseParVecObj2, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_sparse", _wrap_pyDenseParVecObj2_sparse, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_len", _wrap_pyDenseParVecObj2_len, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2___len__", _wrap_pyDenseParVecObj2___len__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_copy", _wrap_pyDenseParVecObj2_copy, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_SubsRef", _wrap_pyDenseParVecObj2_SubsRef, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_RandPerm", _wrap_pyDenseParVecObj2_RandPerm, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_Sort", _wrap_pyDenseParVecObj2_Sort, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_TopK", _wrap_pyDenseParVecObj2_TopK, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_printall", _wrap_pyDenseParVecObj2_printall, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_getnee", _wrap_pyDenseParVecObj2_getnee, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_load", _wrap_pyDenseParVecObj2_load, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_save", _wrap_pyDenseParVecObj2_save, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_Count", _wrap_pyDenseParVecObj2_Count, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_Reduce", _wrap_pyDenseParVecObj2_Reduce, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_Find", _wrap_pyDenseParVecObj2_Find, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_FindInds", _wrap_pyDenseParVecObj2_FindInds, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_Apply", _wrap_pyDenseParVecObj2_Apply, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_ApplyMasked", _wrap_pyDenseParVecObj2_ApplyMasked, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_EWiseApply", _wrap_pyDenseParVecObj2_EWiseApply, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2___getitem__", _wrap_pyDenseParVecObj2___getitem__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2___setitem__", _wrap_pyDenseParVecObj2___setitem__, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2___repr__", _wrap_pyDenseParVecObj2___repr__, METH_VARARGS, NULL},
	 { (char *)"delete_pyDenseParVecObj2", _wrap_delete_pyDenseParVecObj2, METH_VARARGS, NULL},
	 { (char *)"pyDenseParVecObj2_swigregister", pyDenseParVecObj2_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_UnaryFunction", _wrap_delete_UnaryFunction, METH_VARARGS, NULL},
	 { (char *)"UnaryFunction___call__", _wrap_UnaryFunction___call__, METH_VARARGS, NULL},
	 { (char *)"UnaryFunction_swigregister", UnaryFunction_swigregister, METH_VARARGS, NULL},
	 { (char *)"set", _wrap_set, METH_VARARGS, NULL},
	 { (char *)"identity", _wrap_identity, METH_VARARGS, NULL},
	 { (char *)"safemultinv", _wrap_safemultinv, METH_VARARGS, NULL},
	 { (char *)"abs", _wrap_abs, METH_VARARGS, NULL},
	 { (char *)"negate", _wrap_negate, METH_VARARGS, NULL},
	 { (char *)"bitwise_not", _wrap_bitwise_not, METH_VARARGS, NULL},
	 { (char *)"logical_not", _wrap_logical_not, METH_VARARGS, NULL},
	 { (char *)"totality", _wrap_totality, METH_VARARGS, NULL},
	 { (char *)"ifthenelse", _wrap_ifthenelse, METH_VARARGS, NULL},
	 { (char *)"unary", _wrap_unary, METH_VARARGS, NULL},
	 { (char *)"delete_BinaryFunction", _wrap_delete_BinaryFunction, METH_VARARGS, NULL},
	 { (char *)"BinaryFunction_commutable_set", _wrap_BinaryFunction_commutable_set, METH_VARARGS, NULL},
	 { (char *)"BinaryFunction_commutable_get", _wrap_BinaryFunction_commutable_get, METH_VARARGS, NULL},
	 { (char *)"BinaryFunction_associative_set", _wrap_BinaryFunction_associative_set, METH_VARARGS, NULL},
	 { (char *)"BinaryFunction_associative_get", _wrap_BinaryFunction_associative_get, METH_VARARGS, NULL},
	 { (char *)"BinaryFunction___call__", _wrap_BinaryFunction___call__, METH_VARARGS, NULL},
	 { (char *)"BinaryFunction_swigregister", BinaryFunction_swigregister, METH_VARARGS, NULL},
	 { (char *)"plus", _wrap_plus, METH_VARARGS, NULL},
	 { (char *)"minus", _wrap_minus, METH_VARARGS, NULL},
	 { (char *)"multiplies", _wrap_multiplies, METH_VARARGS, NULL},
	 { (char *)"divides", _wrap_divides, METH_VARARGS, NULL},
	 { (char *)"modulus", _wrap_modulus, METH_VARARGS, NULL},
	 { (char *)"fmod", _wrap_fmod, METH_VARARGS, NULL},
	 { (char *)"pow", _wrap_pow, METH_VARARGS, NULL},
	 { (char *)"max", _wrap_max, METH_VARARGS, NULL},
	 { (char *)"min", _wrap_min, METH_VARARGS, NULL},
	 { (char *)"bitwise_and", _wrap_bitwise_and, METH_VARARGS, NULL},
	 { (char *)"bitwise_or", _wrap_bitwise_or, METH_VARARGS, NULL},
	 { (char *)"bitwise_xor", _wrap_bitwise_xor, METH_VARARGS, NULL},
	 { (char *)"logical_and", _wrap_logical_and, METH_VARARGS, NULL},
	 { (char *)"logical_or", _wrap_logical_or, METH_VARARGS, NULL},
	 { (char *)"logical_xor", _wrap_logical_xor, METH_VARARGS, NULL},
	 { (char *)"equal_to", _wrap_equal_to, METH_VARARGS, NULL},
	 { (char *)"not_equal_to", _wrap_not_equal_to, METH_VARARGS, NULL},
	 { (char *)"greater", _wrap_greater, METH_VARARGS, NULL},
	 { (char *)"less", _wrap_less, METH_VARARGS, NULL},
	 { (char *)"greater_equal", _wrap_greater_equal, METH_VARARGS, NULL},
	 { (char *)"less_equal", _wrap_less_equal, METH_VARARGS, NULL},
	 { (char *)"binary", _wrap_binary, METH_VARARGS, NULL},
	 { (char *)"binaryPtr", _wrap_binaryPtr, METH_VARARGS, NULL},
	 { (char *)"bind1st", _wrap_bind1st, METH_VARARGS, NULL},
	 { (char *)"bind2nd", _wrap_bind2nd, METH_VARARGS, NULL},
	 { (char *)"compose1", _wrap_compose1, METH_VARARGS, NULL},
	 { (char *)"compose2", _wrap_compose2, METH_VARARGS, NULL},
	 { (char *)"not1", _wrap_not1, METH_VARARGS, NULL},
	 { (char *)"not2", _wrap_not2, METH_VARARGS, NULL},
	 { (char *)"new_Semiring", _wrap_new_Semiring, METH_VARARGS, NULL},
	 { (char *)"delete_Semiring", _wrap_delete_Semiring, METH_VARARGS, NULL},
	 { (char *)"Semiring_mpi_op", _wrap_Semiring_mpi_op, METH_VARARGS, NULL},
	 { (char *)"Semiring_add", _wrap_Semiring_add, METH_VARARGS, NULL},
	 { (char *)"Semiring_multiply", _wrap_Semiring_multiply, METH_VARARGS, NULL},
	 { (char *)"Semiring_axpy", _wrap_Semiring_axpy, METH_VARARGS, NULL},
	 { (char *)"Semiring_swigregister", Semiring_swigregister, METH_VARARGS, NULL},
	 { (char *)"TimesPlusSemiring", _wrap_TimesPlusSemiring, METH_VARARGS, NULL},
	 { (char *)"SecondMaxSemiring", _wrap_SecondMaxSemiring, METH_VARARGS, NULL},
	 { (char *)"Obj1_weight_set", _wrap_Obj1_weight_set, METH_VARARGS, NULL},
	 { (char *)"Obj1_weight_get", _wrap_Obj1_weight_get, METH_VARARGS, NULL},
	 { (char *)"Obj1_category_set", _wrap_Obj1_category_set, METH_VARARGS, NULL},
	 { (char *)"Obj1_category_get", _wrap_Obj1_category_get, METH_VARARGS, NULL},
	 { (char *)"new_Obj1", _wrap_new_Obj1, METH_VARARGS, NULL},
	 { (char *)"Obj1___repr__", _wrap_Obj1___repr__, METH_VARARGS, NULL},
	 { (char *)"Obj1___eq__", _wrap_Obj1___eq__, METH_VARARGS, NULL},
	 { (char *)"Obj1___ne__", _wrap_Obj1___ne__, METH_VARARGS, NULL},
	 { (char *)"Obj1___lt__", _wrap_Obj1___lt__, METH_VARARGS, NULL},
	 { (char *)"Obj1_hasPassedFilter_set", _wrap_Obj1_hasPassedFilter_set, METH_VARARGS, NULL},
	 { (char *)"Obj1_hasPassedFilter_get", _wrap_Obj1_hasPassedFilter_get, METH_VARARGS, NULL},
	 { (char *)"delete_Obj1", _wrap_delete_Obj1, METH_VARARGS, NULL},
	 { (char *)"Obj1_swigregister", Obj1_swigregister, METH_VARARGS, NULL},
	 { (char *)"Obj2_weight_set", _wrap_Obj2_weight_set, METH_VARARGS, NULL},
	 { (char *)"Obj2_weight_get", _wrap_Obj2_weight_get, METH_VARARGS, NULL},
	 { (char *)"Obj2_category_set", _wrap_Obj2_category_set, METH_VARARGS, NULL},
	 { (char *)"Obj2_category_get", _wrap_Obj2_category_get, METH_VARARGS, NULL},
	 { (char *)"new_Obj2", _wrap_new_Obj2, METH_VARARGS, NULL},
	 { (char *)"Obj2___repr__", _wrap_Obj2___repr__, METH_VARARGS, NULL},
	 { (char *)"Obj2___eq__", _wrap_Obj2___eq__, METH_VARARGS, NULL},
	 { (char *)"Obj2___ne__", _wrap_Obj2___ne__, METH_VARARGS, NULL},
	 { (char *)"Obj2___lt__", _wrap_Obj2___lt__, METH_VARARGS, NULL},
	 { (char *)"Obj2_hasPassedFilter_set", _wrap_Obj2_hasPassedFilter_set, METH_VARARGS, NULL},
	 { (char *)"Obj2_hasPassedFilter_get", _wrap_Obj2_hasPassedFilter_get, METH_VARARGS, NULL},
	 { (char *)"delete_Obj2", _wrap_delete_Obj2, METH_VARARGS, NULL},
	 { (char *)"Obj2_swigregister", Obj2_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_UnaryPredicateObj", _wrap_delete_UnaryPredicateObj, METH_VARARGS, NULL},
	 { (char *)"UnaryPredicateObj_swigregister", UnaryPredicateObj_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_UnaryFunctionObj", _wrap_delete_UnaryFunctionObj, METH_VARARGS, NULL},
	 { (char *)"UnaryFunctionObj_swigregister", UnaryFunctionObj_swigregister, METH_VARARGS, NULL},
	 { (char *)"unaryObj", _wrap_unaryObj, METH_VARARGS, NULL},
	 { (char *)"unaryObjPred", _wrap_unaryObjPred, METH_VARARGS, NULL},
	 { (char *)"delete_BinaryFunctionObj", _wrap_delete_BinaryFunctionObj, METH_VARARGS, NULL},
	 { (char *)"BinaryFunctionObj_commutable_set", _wrap_BinaryFunctionObj_commutable_set, METH_VARARGS, NULL},
	 { (char *)"BinaryFunctionObj_commutable_get", _wrap_BinaryFunctionObj_commutable_get, METH_VARARGS, NULL},
	 { (char *)"BinaryFunctionObj_associative_set", _wrap_BinaryFunctionObj_associative_set, METH_VARARGS, NULL},
	 { (char *)"BinaryFunctionObj_associative_get", _wrap_BinaryFunctionObj_associative_get, METH_VARARGS, NULL},
	 { (char *)"BinaryFunctionObj___call__", _wrap_BinaryFunctionObj___call__, METH_VARARGS, NULL},
	 { (char *)"BinaryFunctionObj_rettype2nd_call", _wrap_BinaryFunctionObj_rettype2nd_call, METH_VARARGS, NULL},
	 { (char *)"BinaryFunctionObj_swigregister", BinaryFunctionObj_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_BinaryPredicateObj", _wrap_delete_BinaryPredicateObj, METH_VARARGS, NULL},
	 { (char *)"BinaryPredicateObj_swigregister", BinaryPredicateObj_swigregister, METH_VARARGS, NULL},
	 { (char *)"binaryObj", _wrap_binaryObj, METH_VARARGS, NULL},
	 { (char *)"binaryObjPred", _wrap_binaryObjPred, METH_VARARGS, NULL},
	 { (char *)"new_SemiringObj", _wrap_new_SemiringObj, METH_VARARGS, NULL},
	 { (char *)"delete_SemiringObj", _wrap_delete_SemiringObj, METH_VARARGS, NULL},
	 { (char *)"SemiringObj_mpi_op", _wrap_SemiringObj_mpi_op, METH_VARARGS, NULL},
	 { (char *)"SemiringObj_swigregister", SemiringObj_swigregister, METH_VARARGS, NULL},
	 { (char *)"finalize", _wrap_finalize, METH_VARARGS, NULL},
	 { (char *)"root", _wrap_root, METH_VARARGS, NULL},
	 { (char *)"_nprocs", _wrap__nprocs, METH_VARARGS, NULL},
	 { (char *)"testFunc", _wrap_testFunc, METH_VARARGS, NULL},
	 { (char *)"new_EWiseArg", _wrap_new_EWiseArg, METH_VARARGS, NULL},
	 { (char *)"delete_EWiseArg", _wrap_delete_EWiseArg, METH_VARARGS, NULL},
	 { (char *)"EWiseArg_swigregister", EWiseArg_swigregister, METH_VARARGS, NULL},
	 { (char *)"EWise_Index", _wrap_EWise_Index, METH_VARARGS, NULL},
	 { (char *)"EWise_OnlyNZ", _wrap_EWise_OnlyNZ, METH_VARARGS, NULL},
	 { (char *)"EWise", _wrap_EWise, METH_VARARGS, NULL},
	 { (char *)"Graph500VectorOps", _wrap_Graph500VectorOps, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_EWiseArg = {"_p_EWiseArg", "EWiseArg *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EWiseArgDescriptor = {"_p_EWiseArgDescriptor", "EWiseArgDescriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MPI_Op = {"_p_MPI_Op", "MPI_Op *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Obj1 = {"_p_Obj1", "Obj1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Obj2 = {"_p_Obj2", "Obj2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_doubleint = {"_p_doubleint", "doubleint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double__double = {"_p_f_double__double", "double (*)(double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__BinaryFunction = {"_p_op__BinaryFunction", "op::BinaryFunction *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__BinaryFunctionObj = {"_p_op__BinaryFunctionObj", "op::BinaryFunctionObj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__BinaryPredicateObj = {"_p_op__BinaryPredicateObj", "op::BinaryPredicateObj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__Semiring = {"_p_op__Semiring", "op::Semiring *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__SemiringObj = {"_p_op__SemiringObj", "op::SemiringObj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__UnaryFunction = {"_p_op__UnaryFunction", "op::UnaryFunction *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__UnaryFunctionObj = {"_p_op__UnaryFunctionObj", "op::UnaryFunctionObj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_op__UnaryPredicateObj = {"_p_op__UnaryPredicateObj", "op::UnaryPredicateObj *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pyDenseParVec = {"_p_pyDenseParVec", "pyDenseParVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pyDenseParVecObj1 = {"_p_pyDenseParVecObj1", "pyDenseParVecObj1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pyDenseParVecObj2 = {"_p_pyDenseParVecObj2", "pyDenseParVecObj2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pySpParMat = {"_p_pySpParMat", "pySpParMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pySpParMatBool = {"_p_pySpParMatBool", "pySpParMatBool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pySpParMatObj1 = {"_p_pySpParMatObj1", "pySpParMatObj1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pySpParMatObj2 = {"_p_pySpParMatObj2", "pySpParMatObj2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pySpParVec = {"_p_pySpParVec", "pySpParVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pySpParVecObj1 = {"_p_pySpParVecObj1", "pySpParVecObj1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pySpParVecObj2 = {"_p_pySpParVecObj2", "pySpParVecObj2 *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_EWiseArg,
  &_swigt__p_EWiseArgDescriptor,
  &_swigt__p_MPI_Op,
  &_swigt__p_Obj1,
  &_swigt__p_Obj2,
  &_swigt__p_char,
  &_swigt__p_doubleint,
  &_swigt__p_f_double__double,
  &_swigt__p_op__BinaryFunction,
  &_swigt__p_op__BinaryFunctionObj,
  &_swigt__p_op__BinaryPredicateObj,
  &_swigt__p_op__Semiring,
  &_swigt__p_op__SemiringObj,
  &_swigt__p_op__UnaryFunction,
  &_swigt__p_op__UnaryFunctionObj,
  &_swigt__p_op__UnaryPredicateObj,
  &_swigt__p_pyDenseParVec,
  &_swigt__p_pyDenseParVecObj1,
  &_swigt__p_pyDenseParVecObj2,
  &_swigt__p_pySpParMat,
  &_swigt__p_pySpParMatBool,
  &_swigt__p_pySpParMatObj1,
  &_swigt__p_pySpParMatObj2,
  &_swigt__p_pySpParVec,
  &_swigt__p_pySpParVecObj1,
  &_swigt__p_pySpParVecObj2,
};

static swig_cast_info _swigc__p_EWiseArg[] = {  {&_swigt__p_EWiseArg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EWiseArgDescriptor[] = {  {&_swigt__p_EWiseArgDescriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MPI_Op[] = {  {&_swigt__p_MPI_Op, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Obj1[] = {  {&_swigt__p_Obj1, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Obj2[] = {  {&_swigt__p_Obj2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_doubleint[] = {  {&_swigt__p_doubleint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double__double[] = {  {&_swigt__p_f_double__double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__BinaryFunction[] = {  {&_swigt__p_op__BinaryFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__BinaryFunctionObj[] = {  {&_swigt__p_op__BinaryFunctionObj, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__BinaryPredicateObj[] = {  {&_swigt__p_op__BinaryPredicateObj, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__Semiring[] = {  {&_swigt__p_op__Semiring, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__SemiringObj[] = {  {&_swigt__p_op__SemiringObj, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__UnaryFunction[] = {  {&_swigt__p_op__UnaryFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__UnaryFunctionObj[] = {  {&_swigt__p_op__UnaryFunctionObj, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_op__UnaryPredicateObj[] = {  {&_swigt__p_op__UnaryPredicateObj, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pyDenseParVec[] = {  {&_swigt__p_pyDenseParVec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pyDenseParVecObj1[] = {  {&_swigt__p_pyDenseParVecObj1, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pyDenseParVecObj2[] = {  {&_swigt__p_pyDenseParVecObj2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pySpParMat[] = {  {&_swigt__p_pySpParMat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pySpParMatBool[] = {  {&_swigt__p_pySpParMatBool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pySpParMatObj1[] = {  {&_swigt__p_pySpParMatObj1, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pySpParMatObj2[] = {  {&_swigt__p_pySpParMatObj2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pySpParVec[] = {  {&_swigt__p_pySpParVec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pySpParVecObj1[] = {  {&_swigt__p_pySpParVecObj1, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pySpParVecObj2[] = {  {&_swigt__p_pySpParVecObj2, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_EWiseArg,
  _swigc__p_EWiseArgDescriptor,
  _swigc__p_MPI_Op,
  _swigc__p_Obj1,
  _swigc__p_Obj2,
  _swigc__p_char,
  _swigc__p_doubleint,
  _swigc__p_f_double__double,
  _swigc__p_op__BinaryFunction,
  _swigc__p_op__BinaryFunctionObj,
  _swigc__p_op__BinaryPredicateObj,
  _swigc__p_op__Semiring,
  _swigc__p_op__SemiringObj,
  _swigc__p_op__UnaryFunction,
  _swigc__p_op__UnaryFunctionObj,
  _swigc__p_op__UnaryPredicateObj,
  _swigc__p_pyDenseParVec,
  _swigc__p_pyDenseParVecObj1,
  _swigc__p_pyDenseParVecObj2,
  _swigc__p_pySpParMat,
  _swigc__p_pySpParMatBool,
  _swigc__p_pySpParMatObj1,
  _swigc__p_pySpParMatObj2,
  _swigc__p_pySpParVec,
  _swigc__p_pySpParVecObj1,
  _swigc__p_pySpParVecObj2,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  
  init_pyCombBLAS_MPI();
  
  /* These are necessary because the file generated by `swig -python -external-runtime` doesn't
     include the type info. SWIG types are needed by nearly every call to a SWIG function
     (eg. SWIG_ConvertPtr). The SWIG docs don't mention how these types are to be obtained,
     so I copy them over from the _wrap.cpp file here.
  */
  SWIG_Obj1Info = SWIGTYPE_p_Obj1;
  SWIG_Obj2Info = SWIGTYPE_p_Obj2;
  
}

